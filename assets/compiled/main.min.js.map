{"version":3,"sources":["zepto.js","underscore.js","backbone.js","backbone.localStorage.js"],"names":["Zepto","type","obj","String","class2type","toString","call","isFunction","value","isWindow","window","isDocument","nodeType","DOCUMENT_NODE","isObject","isPlainObject","Object","getPrototypeOf","prototype","likeArray","length","compact","array","filter","item","flatten","$","fn","concat","apply","dasherize","str","replace","toLowerCase","classRE","name","classCache","RegExp","maybeAddPx","cssNumber","defaultDisplay","nodeName","element","display","elementDisplay","document","createElement","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","children","slice","map","childNodes","node","extend","target","source","deep","key","isArray","undefined","filtered","nodes","selector","funcArg","context","arg","idx","payload","setAttribute","removeAttribute","className","klass","svg","baseVal","deserializeValue","test","parseJSON","e","traverseNode","fun","i","len","classList","camelize","uniq","emptyArray","column-count","columns","font-weight","line-height","opacity","z-index","zoom","fragmentRE","singleTagRE","tagExpanderRE","rootNodeRE","capitalRE","methodAttributes","adjacencyOperators","table","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","readyRE","simpleSelectorRE","zepto","tempParent","propMap","tabindex","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","Array","object","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","match","parent","temp","qsa","indexOf","chr","toUpperCase","fragment","html","properties","dom","container","$1","innerHTML","each","this","attr","Z","__proto__","isZ","init","trim","find","ready","args","arguments","shift","forEach","found","maybeID","maybeClass","nameOnly","isSimple","getElementById","getElementsByClassName","getElementsByTagName","querySelectorAll","contains","documentElement","isEmptyObject","inArray","elem","camelCase","uuid","support","expr","elements","callback","values","push","grep","JSON","parse","split","reduce","sort","el","readyState","addEventListener","get","toArray","size","remove","every","not","add","is","excludes","has","eq","first","last","result","$this","some","closest","collection","parents","ancestors","pluck","contents","siblings","child","empty","property","show","style","replaceWith","newContent","before","wrap","structure","func","clone","index","wrapAll","cloneNode","append","wrapInner","self","unwrap","hide","css","toggle","setting","prev","next","originHtml","text","newText","textContent","getAttribute","removeAttr","attribute","prop","data","attrName","val","multiple","selected","offset","coordinates","coords","parentOffset","offsetParent","props","top","left","getBoundingClientRect","pageXOffset","pageYOffset","width","Math","round","height","computedStyle","_","removeProperty","cssText","hasClass","addClass","cls","newName","join","removeClass","toggleClass","when","names","scrollTop","hasScrollTop","scrollTo","scrollX","scrollLeft","hasScrollLeft","scrollY","position","parseFloat","detach","dimension","dimensionProperty","m","operator","operatorIndex","inside","argType","copyByClone","nextSibling","firstChild","parentInDocument","insertBefore","src","zid","_zid","findHandlers","event","ns","matcher","matcherFor","handlers","handler","sel","parts","eventCapture","captureSetting","del","focusinSupported","focus","realEvent","hover","events","delegator","capture","id","set","related","relatedTarget","proxy","compatible","isImmediatePropagationStopped","_args","preventDefault","stopPropagation","removeEventListener","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","defaultPrevented","returnValue","getPreventDefault","createProxy","originalEvent","ignoreProperties","isString","specialEvents","blur","mouseenter","mouseleave","click","mousedown","mouseup","mousemove","proxyFn","unshift","TypeError","bind","on","unbind","off","one","stopImmediatePropagation","delegate","undelegate","live","die","autoRemove","evt","currentTarget","liveFired","trigger","Event","dispatchEvent","triggerHandler","createEvent","bubbles","initEvent","triggerAndReturn","eventName","triggerGlobal","settings","global","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","deferred","status","success","resolveWith","ajaxComplete","ajaxError","error","rejectWith","complete","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","url","query","serializeData","options","processData","param","traditional","parseArguments","dataType","serialize","params","scope","hash","jsonpID","rscript","blankRE","originAnchor","href","location","ajaxJSONP","ajax","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","script","originalCallback","abort","errorType","promise","clearTimeout","head","timeout","setTimeout","ajaxSettings","XMLHttpRequest","accepts","json","xml","crossDomain","cache","urlAnchor","Deferred","protocol","host","hasPlaceholder","Date","now","jsonp","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","statusText","xhrFields","async","open","username","password","send","post","getJSON","load","response","escape","encodeURIComponent","serializeArray","field","disabled","checked","elm","submit","__Z","nativeGetComputedStyle","createReduce","dir","iterator","iteratee","memo","keys","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","cb","getLength","createIndexFinder","predicateFind","sortedIndex","max","min","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","ObjProto","root","previousUnderscore","ArrayProto","FuncProto","Function","hasOwnProperty","nativeIsArray","nativeKeys","nativeBind","nativeCreate","create","Ctor","_wrapped","exports","module","VERSION","argCount","other","accumulator","identity","Infinity","createAssigner","keysFunc","undefinedOnly","l","baseCreate","MAX_ARRAY_INDEX","pow","collect","results","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","select","list","reject","negate","all","any","includes","include","fromIndex","guard","invoke","method","isFunc","where","attrs","findWhere","computed","lastComputed","shuffle","rand","shuffled","random","sample","n","sortBy","criteria","right","a","b","group","behavior","groupBy","indexBy","countBy","partition","pass","fail","take","initial","rest","tail","drop","input","shallow","strict","startIndex","output","isArguments","j","without","difference","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","bound","partial","boundArgs","bindAll","Error","memoize","hasher","address","delay","wait","defer","throttle","previous","later","leading","remaining","trailing","debounce","immediate","timestamp","callNow","wrapper","compose","after","times","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","extendOwn","assign","pick","oiteratee","omit","defaults","tap","interceptor","isMatch","aStack","bStack","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isElement","Int8Array","isFinite","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","accum","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","string","unescape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","oldSettings","variable","render","argument","chain","instance","_chain","mixin","valueOf","toJSON","define","amd","factory","Backbone","require","jQuery","ender","previousBackbone","emulateHTTP","emulateJSON","addMethod","defaultVal","addUnderscoreMethods","Class","_isModel","modelMatcher","model","attributes","Events","eventSplitter","eventsApi","opts","internalOn","listening","_events","onApi","ctx","listeners","_listeners","listenTo","_listenId","listeningTo","_listeningTo","thisId","objId","count","offApi","stopListening","ids","_callback","onceMap","listenToOnce","offer","triggerApi","objEvents","allEvents","triggerEvents","ev","a1","a2","a3","Model","cid","cidPrefix","changed","initialize","validationError","idAttribute","sync","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","fetch","resp","serverAttrs","wrapError","save","validate","isNew","patch","destroy","base","urlError","isValid","modelMethods","Collection","models","comparator","_reset","reset","setOptions","merge","addOptions","splice","insert","at","singular","removed","_removeModels","toAdd","toRemove","modelMap","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","_removeReference","previousModels","modelId","_byId","callbackOpts","_onModelEvent","prevId","collectionMethods","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","$el","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","listener","_createElement","_setAttributes","methodMap","stringify","_method","textStatus","errorThrown","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","_extractParameters","execute","navigate","optional","exec","decodeURIComponent","History","checkUrl","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","decodeURI","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","tabIndex","iWindow","contentWindow","close","attachEvent","_checkUrlInterval","setInterval","loadUrl","detachEvent","clearInterval","title","_updateHash","protoProps","staticProps","Surrogate","__super__","S4","substring","guid","LocalStorage","Store","serializer","localStorage","deserialize","store","getItem","records","setItem","_itemName","findAll","removeItem","_clear","local","itemRe","k","_storageSize","localSync","errorMessage","syncDfd","code","message","resolve","ajaxSync","getSyncMethod","forceAjaxSync"],"mappings":"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","file":"main.min.js","sourcesContent":["/* Zepto v1.1.6 - zepto event ajax form ie - zeptojs.com/license */\n\nvar Zepto = (function() {\n  var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,\n    document = window.document,\n    elementDisplay = {}, classCache = {},\n    cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\n    fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n    singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n    tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n    rootNodeRE = /^(?:body|html)$/i,\n    capitalRE = /([A-Z])/g,\n\n    // special attributes that should be get/set via method calls\n    methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\n    adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\n    table = document.createElement('table'),\n    tableRow = document.createElement('tr'),\n    containers = {\n      'tr': document.createElement('tbody'),\n      'tbody': table, 'thead': table, 'tfoot': table,\n      'td': tableRow, 'th': tableRow,\n      '*': document.createElement('div')\n    },\n    readyRE = /complete|loaded|interactive/,\n    simpleSelectorRE = /^[\\w-]*$/,\n    class2type = {},\n    toString = class2type.toString,\n    zepto = {},\n    camelize, uniq,\n    tempParent = document.createElement('div'),\n    propMap = {\n      'tabindex': 'tabIndex',\n      'readonly': 'readOnly',\n      'for': 'htmlFor',\n      'class': 'className',\n      'maxlength': 'maxLength',\n      'cellspacing': 'cellSpacing',\n      'cellpadding': 'cellPadding',\n      'rowspan': 'rowSpan',\n      'colspan': 'colSpan',\n      'usemap': 'useMap',\n      'frameborder': 'frameBorder',\n      'contenteditable': 'contentEditable'\n    },\n    isArray = Array.isArray ||\n      function(object){ return object instanceof Array }\n\n  zepto.matches = function(element, selector) {\n    if (!selector || !element || element.nodeType !== 1) return false\n    var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||\n                          element.oMatchesSelector || element.matchesSelector\n    if (matchesSelector) return matchesSelector.call(element, selector)\n    // fall back to performing a selector:\n    var match, parent = element.parentNode, temp = !parent\n    if (temp) (parent = tempParent).appendChild(element)\n    match = ~zepto.qsa(parent, selector).indexOf(element)\n    temp && tempParent.removeChild(element)\n    return match\n  }\n\n  function type(obj) {\n    return obj == null ? String(obj) :\n      class2type[toString.call(obj)] || \"object\"\n  }\n\n  function isFunction(value) { return type(value) == \"function\" }\n  function isWindow(obj)     { return obj != null && obj == obj.window }\n  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\n  function isObject(obj)     { return type(obj) == \"object\" }\n  function isPlainObject(obj) {\n    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype\n  }\n  function likeArray(obj) { return typeof obj.length == 'number' }\n\n  function compact(array) { return filter.call(array, function(item){ return item != null }) }\n  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\n  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\n  function dasherize(str) {\n    return str.replace(/::/g, '/')\n           .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n           .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n           .replace(/_/g, '-')\n           .toLowerCase()\n  }\n  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\n\n  function classRE(name) {\n    return name in classCache ?\n      classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\n  }\n\n  function maybeAddPx(name, value) {\n    return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n  }\n\n  function defaultDisplay(nodeName) {\n    var element, display\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName)\n      document.body.appendChild(element)\n      display = getComputedStyle(element, '').getPropertyValue(\"display\")\n      element.parentNode.removeChild(element)\n      display == \"none\" && (display = \"block\")\n      elementDisplay[nodeName] = display\n    }\n    return elementDisplay[nodeName]\n  }\n\n  function children(element) {\n    return 'children' in element ?\n      slice.call(element.children) :\n      $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\n  }\n\n  // `$.zepto.fragment` takes a html string and an optional tag name\n  // to generate DOM nodes nodes from the given html string.\n  // The generated DOM nodes are returned as an array.\n  // This function can be overriden in plugins for example to make\n  // it compatible with browsers that don't support the DOM fully.\n  zepto.fragment = function(html, name, properties) {\n    var dom, nodes, container\n\n    // A special case optimization for a single tag\n    if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))\n\n    if (!dom) {\n      if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\n      if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\n      if (!(name in containers)) name = '*'\n\n      container = containers[name]\n      container.innerHTML = '' + html\n      dom = $.each(slice.call(container.childNodes), function(){\n        container.removeChild(this)\n      })\n    }\n\n    if (isPlainObject(properties)) {\n      nodes = $(dom)\n      $.each(properties, function(key, value) {\n        if (methodAttributes.indexOf(key) > -1) nodes[key](value)\n        else nodes.attr(key, value)\n      })\n    }\n\n    return dom\n  }\n\n  // `$.zepto.Z` swaps out the prototype of the given `dom` array\n  // of nodes with `$.fn` and thus supplying all the Zepto functions\n  // to the array. Note that `__proto__` is not supported on Internet\n  // Explorer. This method can be overriden in plugins.\n  zepto.Z = function(dom, selector) {\n    dom = dom || []\n    dom.__proto__ = $.fn\n    dom.selector = selector || ''\n    return dom\n  }\n\n  // `$.zepto.isZ` should return `true` if the given object is a Zepto\n  // collection. This method can be overriden in plugins.\n  zepto.isZ = function(object) {\n    return object instanceof zepto.Z\n  }\n\n  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\n  // takes a CSS selector and an optional context (and handles various\n  // special cases).\n  // This method can be overriden in plugins.\n  zepto.init = function(selector, context) {\n    var dom\n    // If nothing given, return an empty Zepto collection\n    if (!selector) return zepto.Z()\n    // Optimize for string selectors\n    else if (typeof selector == 'string') {\n      selector = selector.trim()\n      // If it's a html fragment, create nodes from it\n      // Note: In both Chrome 21 and Firefox 15, DOM error 12\n      // is thrown if the fragment doesn't begin with <\n      if (selector[0] == '<' && fragmentRE.test(selector))\n        dom = zepto.fragment(selector, RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // If it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // If a function is given, call it when the DOM is ready\n    else if (isFunction(selector)) return $(document).ready(selector)\n    // If a Zepto collection is given, just return it\n    else if (zepto.isZ(selector)) return selector\n    else {\n      // normalize array if an array of nodes is given\n      if (isArray(selector)) dom = compact(selector)\n      // Wrap DOM nodes.\n      else if (isObject(selector))\n        dom = [selector], selector = null\n      // If it's a html fragment, create nodes from it\n      else if (fragmentRE.test(selector))\n        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // And last but no least, if it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // create a new Zepto collection from the nodes found\n    return zepto.Z(dom, selector)\n  }\n\n  // `$` will be the base `Zepto` object. When calling this\n  // function just call `$.zepto.init, which makes the implementation\n  // details of selecting nodes and creating Zepto collections\n  // patchable in plugins.\n  $ = function(selector, context){\n    return zepto.init(selector, context)\n  }\n\n  function extend(target, source, deep) {\n    for (key in source)\n      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n        if (isPlainObject(source[key]) && !isPlainObject(target[key]))\n          target[key] = {}\n        if (isArray(source[key]) && !isArray(target[key]))\n          target[key] = []\n        extend(target[key], source[key], deep)\n      }\n      else if (source[key] !== undefined) target[key] = source[key]\n  }\n\n  // Copy all but undefined properties from one or more\n  // objects to the `target` object.\n  $.extend = function(target){\n    var deep, args = slice.call(arguments, 1)\n    if (typeof target == 'boolean') {\n      deep = target\n      target = args.shift()\n    }\n    args.forEach(function(arg){ extend(target, arg, deep) })\n    return target\n  }\n\n  // `$.zepto.qsa` is Zepto's CSS selector implementation which\n  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\n  // This method can be overriden in plugins.\n  zepto.qsa = function(element, selector){\n    var found,\n        maybeID = selector[0] == '#',\n        maybeClass = !maybeID && selector[0] == '.',\n        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked\n        isSimple = simpleSelectorRE.test(nameOnly)\n    return (isDocument(element) && isSimple && maybeID) ?\n      ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :\n      (element.nodeType !== 1 && element.nodeType !== 9) ? [] :\n      slice.call(\n        isSimple && !maybeID ?\n          maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class\n          element.getElementsByTagName(selector) : // Or a tag\n          element.querySelectorAll(selector) // Or it's not simple, and we need to query all\n      )\n  }\n\n  function filtered(nodes, selector) {\n    return selector == null ? $(nodes) : $(nodes).filter(selector)\n  }\n\n  $.contains = document.documentElement.contains ?\n    function(parent, node) {\n      return parent !== node && parent.contains(node)\n    } :\n    function(parent, node) {\n      while (node && (node = node.parentNode))\n        if (node === parent) return true\n      return false\n    }\n\n  function funcArg(context, arg, idx, payload) {\n    return isFunction(arg) ? arg.call(context, idx, payload) : arg\n  }\n\n  function setAttribute(node, name, value) {\n    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\n  }\n\n  // access className property while respecting SVGAnimatedString\n  function className(node, value){\n    var klass = node.className || '',\n        svg   = klass && klass.baseVal !== undefined\n\n    if (value === undefined) return svg ? klass.baseVal : klass\n    svg ? (klass.baseVal = value) : (node.className = value)\n  }\n\n  // \"true\"  => true\n  // \"false\" => false\n  // \"null\"  => null\n  // \"42\"    => 42\n  // \"42.5\"  => 42.5\n  // \"08\"    => \"08\"\n  // JSON    => parse if valid\n  // String  => self\n  function deserializeValue(value) {\n    try {\n      return value ?\n        value == \"true\" ||\n        ( value == \"false\" ? false :\n          value == \"null\" ? null :\n          +value + \"\" == value ? +value :\n          /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\n          value )\n        : value\n    } catch(e) {\n      return value\n    }\n  }\n\n  $.type = type\n  $.isFunction = isFunction\n  $.isWindow = isWindow\n  $.isArray = isArray\n  $.isPlainObject = isPlainObject\n\n  $.isEmptyObject = function(obj) {\n    var name\n    for (name in obj) return false\n    return true\n  }\n\n  $.inArray = function(elem, array, i){\n    return emptyArray.indexOf.call(array, elem, i)\n  }\n\n  $.camelCase = camelize\n  $.trim = function(str) {\n    return str == null ? \"\" : String.prototype.trim.call(str)\n  }\n\n  // plugin compatibility\n  $.uuid = 0\n  $.support = { }\n  $.expr = { }\n\n  $.map = function(elements, callback){\n    var value, values = [], i, key\n    if (likeArray(elements))\n      for (i = 0; i < elements.length; i++) {\n        value = callback(elements[i], i)\n        if (value != null) values.push(value)\n      }\n    else\n      for (key in elements) {\n        value = callback(elements[key], key)\n        if (value != null) values.push(value)\n      }\n    return flatten(values)\n  }\n\n  $.each = function(elements, callback){\n    var i, key\n    if (likeArray(elements)) {\n      for (i = 0; i < elements.length; i++)\n        if (callback.call(elements[i], i, elements[i]) === false) return elements\n    } else {\n      for (key in elements)\n        if (callback.call(elements[key], key, elements[key]) === false) return elements\n    }\n\n    return elements\n  }\n\n  $.grep = function(elements, callback){\n    return filter.call(elements, callback)\n  }\n\n  if (window.JSON) $.parseJSON = JSON.parse\n\n  // Populate the class2type map\n  $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\n  })\n\n  // Define methods that will be available on all\n  // Zepto collections\n  $.fn = {\n    // Because a collection acts like an array\n    // copy over these useful array functions.\n    forEach: emptyArray.forEach,\n    reduce: emptyArray.reduce,\n    push: emptyArray.push,\n    sort: emptyArray.sort,\n    indexOf: emptyArray.indexOf,\n    concat: emptyArray.concat,\n\n    // `map` and `slice` in the jQuery API work differently\n    // from their array counterparts\n    map: function(fn){\n      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\n    },\n    slice: function(){\n      return $(slice.apply(this, arguments))\n    },\n\n    ready: function(callback){\n      // need to check if document.body exists for IE as that browser reports\n      // document ready when it hasn't yet created the body element\n      if (readyRE.test(document.readyState) && document.body) callback($)\n      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\n      return this\n    },\n    get: function(idx){\n      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n    },\n    toArray: function(){ return this.get() },\n    size: function(){\n      return this.length\n    },\n    remove: function(){\n      return this.each(function(){\n        if (this.parentNode != null)\n          this.parentNode.removeChild(this)\n      })\n    },\n    each: function(callback){\n      emptyArray.every.call(this, function(el, idx){\n        return callback.call(el, idx, el) !== false\n      })\n      return this\n    },\n    filter: function(selector){\n      if (isFunction(selector)) return this.not(this.not(selector))\n      return $(filter.call(this, function(element){\n        return zepto.matches(element, selector)\n      }))\n    },\n    add: function(selector,context){\n      return $(uniq(this.concat($(selector,context))))\n    },\n    is: function(selector){\n      return this.length > 0 && zepto.matches(this[0], selector)\n    },\n    not: function(selector){\n      var nodes=[]\n      if (isFunction(selector) && selector.call !== undefined)\n        this.each(function(idx){\n          if (!selector.call(this,idx)) nodes.push(this)\n        })\n      else {\n        var excludes = typeof selector == 'string' ? this.filter(selector) :\n          (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n        this.forEach(function(el){\n          if (excludes.indexOf(el) < 0) nodes.push(el)\n        })\n      }\n      return $(nodes)\n    },\n    has: function(selector){\n      return this.filter(function(){\n        return isObject(selector) ?\n          $.contains(this, selector) :\n          $(this).find(selector).size()\n      })\n    },\n    eq: function(idx){\n      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\n    },\n    first: function(){\n      var el = this[0]\n      return el && !isObject(el) ? el : $(el)\n    },\n    last: function(){\n      var el = this[this.length - 1]\n      return el && !isObject(el) ? el : $(el)\n    },\n    find: function(selector){\n      var result, $this = this\n      if (!selector) result = $()\n      else if (typeof selector == 'object')\n        result = $(selector).filter(function(){\n          var node = this\n          return emptyArray.some.call($this, function(parent){\n            return $.contains(parent, node)\n          })\n        })\n      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\n      else result = this.map(function(){ return zepto.qsa(this, selector) })\n      return result\n    },\n    closest: function(selector, context){\n      var node = this[0], collection = false\n      if (typeof selector == 'object') collection = $(selector)\n      while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\n        node = node !== context && !isDocument(node) && node.parentNode\n      return $(node)\n    },\n    parents: function(selector){\n      var ancestors = [], nodes = this\n      while (nodes.length > 0)\n        nodes = $.map(nodes, function(node){\n          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n            ancestors.push(node)\n            return node\n          }\n        })\n      return filtered(ancestors, selector)\n    },\n    parent: function(selector){\n      return filtered(uniq(this.pluck('parentNode')), selector)\n    },\n    children: function(selector){\n      return filtered(this.map(function(){ return children(this) }), selector)\n    },\n    contents: function() {\n      return this.map(function() { return slice.call(this.childNodes) })\n    },\n    siblings: function(selector){\n      return filtered(this.map(function(i, el){\n        return filter.call(children(el.parentNode), function(child){ return child!==el })\n      }), selector)\n    },\n    empty: function(){\n      return this.each(function(){ this.innerHTML = '' })\n    },\n    // `pluck` is borrowed from Prototype.js\n    pluck: function(property){\n      return $.map(this, function(el){ return el[property] })\n    },\n    show: function(){\n      return this.each(function(){\n        this.style.display == \"none\" && (this.style.display = '')\n        if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\n          this.style.display = defaultDisplay(this.nodeName)\n      })\n    },\n    replaceWith: function(newContent){\n      return this.before(newContent).remove()\n    },\n    wrap: function(structure){\n      var func = isFunction(structure)\n      if (this[0] && !func)\n        var dom   = $(structure).get(0),\n            clone = dom.parentNode || this.length > 1\n\n      return this.each(function(index){\n        $(this).wrapAll(\n          func ? structure.call(this, index) :\n            clone ? dom.cloneNode(true) : dom\n        )\n      })\n    },\n    wrapAll: function(structure){\n      if (this[0]) {\n        $(this[0]).before(structure = $(structure))\n        var children\n        // drill down to the inmost element\n        while ((children = structure.children()).length) structure = children.first()\n        $(structure).append(this)\n      }\n      return this\n    },\n    wrapInner: function(structure){\n      var func = isFunction(structure)\n      return this.each(function(index){\n        var self = $(this), contents = self.contents(),\n            dom  = func ? structure.call(this, index) : structure\n        contents.length ? contents.wrapAll(dom) : self.append(dom)\n      })\n    },\n    unwrap: function(){\n      this.parent().each(function(){\n        $(this).replaceWith($(this).children())\n      })\n      return this\n    },\n    clone: function(){\n      return this.map(function(){ return this.cloneNode(true) })\n    },\n    hide: function(){\n      return this.css(\"display\", \"none\")\n    },\n    toggle: function(setting){\n      return this.each(function(){\n        var el = $(this)\n        ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n      })\n    },\n    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\n    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\n    html: function(html){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var originHtml = this.innerHTML\n          $(this).empty().append( funcArg(this, html, idx, originHtml) )\n        }) :\n        (0 in this ? this[0].innerHTML : null)\n    },\n    text: function(text){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var newText = funcArg(this, text, idx, this.textContent)\n          this.textContent = newText == null ? '' : ''+newText\n        }) :\n        (0 in this ? this[0].textContent : null)\n    },\n    attr: function(name, value){\n      var result\n      return (typeof name == 'string' && !(1 in arguments)) ?\n        (!this.length || this[0].nodeType !== 1 ? undefined :\n          (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result\n        ) :\n        this.each(function(idx){\n          if (this.nodeType !== 1) return\n          if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\n          else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\n        })\n    },\n    removeAttr: function(name){\n      return this.each(function(){ this.nodeType === 1 && name.split(' ').forEach(function(attribute){\n        setAttribute(this, attribute)\n      }, this)})\n    },\n    prop: function(name, value){\n      name = propMap[name] || name\n      return (1 in arguments) ?\n        this.each(function(idx){\n          this[name] = funcArg(this, value, idx, this[name])\n        }) :\n        (this[0] && this[0][name])\n    },\n    data: function(name, value){\n      var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase()\n\n      var data = (1 in arguments) ?\n        this.attr(attrName, value) :\n        this.attr(attrName)\n\n      return data !== null ? deserializeValue(data) : undefined\n    },\n    val: function(value){\n      return 0 in arguments ?\n        this.each(function(idx){\n          this.value = funcArg(this, value, idx, this.value)\n        }) :\n        (this[0] && (this[0].multiple ?\n           $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :\n           this[0].value)\n        )\n    },\n    offset: function(coordinates){\n      if (coordinates) return this.each(function(index){\n        var $this = $(this),\n            coords = funcArg(this, coordinates, index, $this.offset()),\n            parentOffset = $this.offsetParent().offset(),\n            props = {\n              top:  coords.top  - parentOffset.top,\n              left: coords.left - parentOffset.left\n            }\n\n        if ($this.css('position') == 'static') props['position'] = 'relative'\n        $this.css(props)\n      })\n      if (!this.length) return null\n      var obj = this[0].getBoundingClientRect()\n      return {\n        left: obj.left + window.pageXOffset,\n        top: obj.top + window.pageYOffset,\n        width: Math.round(obj.width),\n        height: Math.round(obj.height)\n      }\n    },\n    css: function(property, value){\n      if (arguments.length < 2) {\n        var computedStyle, element = this[0]\n        if(!element) return\n        computedStyle = getComputedStyle(element, '')\n        if (typeof property == 'string')\n          return element.style[camelize(property)] || computedStyle.getPropertyValue(property)\n        else if (isArray(property)) {\n          var props = {}\n          $.each(property, function(_, prop){\n            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))\n          })\n          return props\n        }\n      }\n\n      var css = ''\n      if (type(property) == 'string') {\n        if (!value && value !== 0)\n          this.each(function(){ this.style.removeProperty(dasherize(property)) })\n        else\n          css = dasherize(property) + \":\" + maybeAddPx(property, value)\n      } else {\n        for (key in property)\n          if (!property[key] && property[key] !== 0)\n            this.each(function(){ this.style.removeProperty(dasherize(key)) })\n          else\n            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n      }\n\n      return this.each(function(){ this.style.cssText += ';' + css })\n    },\n    index: function(element){\n      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\n    },\n    hasClass: function(name){\n      if (!name) return false\n      return emptyArray.some.call(this, function(el){\n        return this.test(className(el))\n      }, classRE(name))\n    },\n    addClass: function(name){\n      if (!name) return this\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        classList = []\n        var cls = className(this), newName = funcArg(this, name, idx, cls)\n        newName.split(/\\s+/g).forEach(function(klass){\n          if (!$(this).hasClass(klass)) classList.push(klass)\n        }, this)\n        classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\n      })\n    },\n    removeClass: function(name){\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        if (name === undefined) return className(this, '')\n        classList = className(this)\n        funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\n          classList = classList.replace(classRE(klass), \" \")\n        })\n        className(this, classList.trim())\n      })\n    },\n    toggleClass: function(name, when){\n      if (!name) return this\n      return this.each(function(idx){\n        var $this = $(this), names = funcArg(this, name, idx, className(this))\n        names.split(/\\s+/g).forEach(function(klass){\n          (when === undefined ? !$this.hasClass(klass) : when) ?\n            $this.addClass(klass) : $this.removeClass(klass)\n        })\n      })\n    },\n    scrollTop: function(value){\n      if (!this.length) return\n      var hasScrollTop = 'scrollTop' in this[0]\n      if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset\n      return this.each(hasScrollTop ?\n        function(){ this.scrollTop = value } :\n        function(){ this.scrollTo(this.scrollX, value) })\n    },\n    scrollLeft: function(value){\n      if (!this.length) return\n      var hasScrollLeft = 'scrollLeft' in this[0]\n      if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset\n      return this.each(hasScrollLeft ?\n        function(){ this.scrollLeft = value } :\n        function(){ this.scrollTo(value, this.scrollY) })\n    },\n    position: function() {\n      if (!this.length) return\n\n      var elem = this[0],\n        // Get *real* offsetParent\n        offsetParent = this.offsetParent(),\n        // Get correct offsets\n        offset       = this.offset(),\n        parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\n\n      // Subtract element margins\n      // note: when an element has margin: auto the offsetLeft and marginLeft\n      // are the same in Safari causing offset.left to incorrectly be 0\n      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\n      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\n\n      // Add offsetParent borders\n      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\n      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\n\n      // Subtract the two offsets\n      return {\n        top:  offset.top  - parentOffset.top,\n        left: offset.left - parentOffset.left\n      }\n    },\n    offsetParent: function() {\n      return this.map(function(){\n        var parent = this.offsetParent || document.body\n        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\n          parent = parent.offsetParent\n        return parent\n      })\n    }\n  }\n\n  // for now\n  $.fn.detach = $.fn.remove\n\n  // Generate the `width` and `height` functions\n  ;['width', 'height'].forEach(function(dimension){\n    var dimensionProperty =\n      dimension.replace(/./, function(m){ return m[0].toUpperCase() })\n\n    $.fn[dimension] = function(value){\n      var offset, el = this[0]\n      if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :\n        isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :\n        (offset = this.offset()) && offset[dimension]\n      else return this.each(function(idx){\n        el = $(this)\n        el.css(dimension, funcArg(this, value, idx, el[dimension]()))\n      })\n    }\n  })\n\n  function traverseNode(node, fun) {\n    fun(node)\n    for (var i = 0, len = node.childNodes.length; i < len; i++)\n      traverseNode(node.childNodes[i], fun)\n  }\n\n  // Generate the `after`, `prepend`, `before`, `append`,\n  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\n  adjacencyOperators.forEach(function(operator, operatorIndex) {\n    var inside = operatorIndex % 2 //=> prepend, append\n\n    $.fn[operator] = function(){\n      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\n      var argType, nodes = $.map(arguments, function(arg) {\n            argType = type(arg)\n            return argType == \"object\" || argType == \"array\" || arg == null ?\n              arg : zepto.fragment(arg)\n          }),\n          parent, copyByClone = this.length > 1\n      if (nodes.length < 1) return this\n\n      return this.each(function(_, target){\n        parent = inside ? target : target.parentNode\n\n        // convert all methods to a \"before\" operation\n        target = operatorIndex == 0 ? target.nextSibling :\n                 operatorIndex == 1 ? target.firstChild :\n                 operatorIndex == 2 ? target :\n                 null\n\n        var parentInDocument = $.contains(document.documentElement, parent)\n\n        nodes.forEach(function(node){\n          if (copyByClone) node = node.cloneNode(true)\n          else if (!parent) return $(node).remove()\n\n          parent.insertBefore(node, target)\n          if (parentInDocument) traverseNode(node, function(el){\n            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\n               (!el.type || el.type === 'text/javascript') && !el.src)\n              window['eval'].call(window, el.innerHTML)\n          })\n        })\n      })\n    }\n\n    // after    => insertAfter\n    // prepend  => prependTo\n    // before   => insertBefore\n    // append   => appendTo\n    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\n      $(html)[operator](this)\n      return this\n    }\n  })\n\n  zepto.Z.prototype = $.fn\n\n  // Export internal API functions in the `$.zepto` namespace\n  zepto.uniq = uniq\n  zepto.deserializeValue = deserializeValue\n  $.zepto = zepto\n\n  return $\n})()\n\nwindow.Zepto = Zepto\nwindow.$ === undefined && (window.$ = Zepto)\n\n;(function($){\n  var _zid = 1, undefined,\n      slice = Array.prototype.slice,\n      isFunction = $.isFunction,\n      isString = function(obj){ return typeof obj == 'string' },\n      handlers = {},\n      specialEvents={},\n      focusinSupported = 'onfocusin' in window,\n      focus = { focus: 'focusin', blur: 'focusout' },\n      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\n\n  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\n\n  function zid(element) {\n    return element._zid || (element._zid = _zid++)\n  }\n  function findHandlers(element, event, fn, selector) {\n    event = parse(event)\n    if (event.ns) var matcher = matcherFor(event.ns)\n    return (handlers[zid(element)] || []).filter(function(handler) {\n      return handler\n        && (!event.e  || handler.e == event.e)\n        && (!event.ns || matcher.test(handler.ns))\n        && (!fn       || zid(handler.fn) === zid(fn))\n        && (!selector || handler.sel == selector)\n    })\n  }\n  function parse(event) {\n    var parts = ('' + event).split('.')\n    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\n  }\n  function matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\n  }\n\n  function eventCapture(handler, captureSetting) {\n    return handler.del &&\n      (!focusinSupported && (handler.e in focus)) ||\n      !!captureSetting\n  }\n\n  function realEvent(type) {\n    return hover[type] || (focusinSupported && focus[type]) || type\n  }\n\n  function add(element, events, fn, data, selector, delegator, capture){\n    var id = zid(element), set = (handlers[id] || (handlers[id] = []))\n    events.split(/\\s/).forEach(function(event){\n      if (event == 'ready') return $(document).ready(fn)\n      var handler   = parse(event)\n      handler.fn    = fn\n      handler.sel   = selector\n      // emulate mouseenter, mouseleave\n      if (handler.e in hover) fn = function(e){\n        var related = e.relatedTarget\n        if (!related || (related !== this && !$.contains(this, related)))\n          return handler.fn.apply(this, arguments)\n      }\n      handler.del   = delegator\n      var callback  = delegator || fn\n      handler.proxy = function(e){\n        e = compatible(e)\n        if (e.isImmediatePropagationStopped()) return\n        e.data = data\n        var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))\n        if (result === false) e.preventDefault(), e.stopPropagation()\n        return result\n      }\n      handler.i = set.length\n      set.push(handler)\n      if ('addEventListener' in element)\n        element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n    })\n  }\n  function remove(element, events, fn, selector, capture){\n    var id = zid(element)\n    ;(events || '').split(/\\s/).forEach(function(event){\n      findHandlers(element, event, fn, selector).forEach(function(handler){\n        delete handlers[id][handler.i]\n      if ('removeEventListener' in element)\n        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n      })\n    })\n  }\n\n  $.event = { add: add, remove: remove }\n\n  $.proxy = function(fn, context) {\n    var args = (2 in arguments) && slice.call(arguments, 2)\n    if (isFunction(fn)) {\n      var proxyFn = function(){ return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments) }\n      proxyFn._zid = zid(fn)\n      return proxyFn\n    } else if (isString(context)) {\n      if (args) {\n        args.unshift(fn[context], fn)\n        return $.proxy.apply(null, args)\n      } else {\n        return $.proxy(fn[context], fn)\n      }\n    } else {\n      throw new TypeError(\"expected function\")\n    }\n  }\n\n  $.fn.bind = function(event, data, callback){\n    return this.on(event, data, callback)\n  }\n  $.fn.unbind = function(event, callback){\n    return this.off(event, callback)\n  }\n  $.fn.one = function(event, selector, data, callback){\n    return this.on(event, selector, data, callback, 1)\n  }\n\n  var returnTrue = function(){return true},\n      returnFalse = function(){return false},\n      ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\n      eventMethods = {\n        preventDefault: 'isDefaultPrevented',\n        stopImmediatePropagation: 'isImmediatePropagationStopped',\n        stopPropagation: 'isPropagationStopped'\n      }\n\n  function compatible(event, source) {\n    if (source || !event.isDefaultPrevented) {\n      source || (source = event)\n\n      $.each(eventMethods, function(name, predicate) {\n        var sourceMethod = source[name]\n        event[name] = function(){\n          this[predicate] = returnTrue\n          return sourceMethod && sourceMethod.apply(source, arguments)\n        }\n        event[predicate] = returnFalse\n      })\n\n      if (source.defaultPrevented !== undefined ? source.defaultPrevented :\n          'returnValue' in source ? source.returnValue === false :\n          source.getPreventDefault && source.getPreventDefault())\n        event.isDefaultPrevented = returnTrue\n    }\n    return event\n  }\n\n  function createProxy(event) {\n    var key, proxy = { originalEvent: event }\n    for (key in event)\n      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\n\n    return compatible(proxy, event)\n  }\n\n  $.fn.delegate = function(selector, event, callback){\n    return this.on(event, selector, callback)\n  }\n  $.fn.undelegate = function(selector, event, callback){\n    return this.off(event, selector, callback)\n  }\n\n  $.fn.live = function(event, callback){\n    $(document.body).delegate(this.selector, event, callback)\n    return this\n  }\n  $.fn.die = function(event, callback){\n    $(document.body).undelegate(this.selector, event, callback)\n    return this\n  }\n\n  $.fn.on = function(event, selector, data, callback, one){\n    var autoRemove, delegator, $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.on(type, selector, data, fn, one)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = data, data = selector, selector = undefined\n    if (isFunction(data) || data === false)\n      callback = data, data = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(_, element){\n      if (one) autoRemove = function(e){\n        remove(element, e.type, callback)\n        return callback.apply(this, arguments)\n      }\n\n      if (selector) delegator = function(e){\n        var evt, match = $(e.target).closest(selector, element).get(0)\n        if (match && match !== element) {\n          evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\n          return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))\n        }\n      }\n\n      add(element, event, callback, data, selector, delegator || autoRemove)\n    })\n  }\n  $.fn.off = function(event, selector, callback){\n    var $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.off(type, selector, fn)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = selector, selector = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(){\n      remove(this, event, callback, selector)\n    })\n  }\n\n  $.fn.trigger = function(event, args){\n    event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)\n    event._args = args\n    return this.each(function(){\n      // handle focus(), blur() by calling them directly\n      if (event.type in focus && typeof this[event.type] == \"function\") this[event.type]()\n      // items in the collection might not be DOM elements\n      else if ('dispatchEvent' in this) this.dispatchEvent(event)\n      else $(this).triggerHandler(event, args)\n    })\n  }\n\n  // triggers event handlers on current element just as if an event occurred,\n  // doesn't trigger an actual event, doesn't bubble\n  $.fn.triggerHandler = function(event, args){\n    var e, result\n    this.each(function(i, element){\n      e = createProxy(isString(event) ? $.Event(event) : event)\n      e._args = args\n      e.target = element\n      $.each(findHandlers(element, event.type || event), function(i, handler){\n        result = handler.proxy(e)\n        if (e.isImmediatePropagationStopped()) return false\n      })\n    })\n    return result\n  }\n\n  // shortcut methods for `.bind(event, fn)` for each event type\n  ;('focusin focusout focus blur load resize scroll unload click dblclick '+\n  'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\n  'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n    $.fn[event] = function(callback) {\n      return (0 in arguments) ?\n        this.bind(event, callback) :\n        this.trigger(event)\n    }\n  })\n\n  $.Event = function(type, props) {\n    if (!isString(type)) props = type, type = props.type\n    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\n    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\n    event.initEvent(type, bubbles, true)\n    return compatible(event)\n  }\n\n})(Zepto)\n\n;(function($){\n  var jsonpID = 0,\n      document = window.document,\n      key,\n      name,\n      rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n      scriptTypeRE = /^(?:text|application)\\/javascript/i,\n      xmlTypeRE = /^(?:text|application)\\/xml/i,\n      jsonType = 'application/json',\n      htmlType = 'text/html',\n      blankRE = /^\\s*$/,\n      originAnchor = document.createElement('a')\n\n  originAnchor.href = window.location.href\n\n  // trigger a custom event and return false if it was cancelled\n  function triggerAndReturn(context, eventName, data) {\n    var event = $.Event(eventName)\n    $(context).trigger(event, data)\n    return !event.isDefaultPrevented()\n  }\n\n  // trigger an Ajax \"global\" event\n  function triggerGlobal(settings, context, eventName, data) {\n    if (settings.global) return triggerAndReturn(context || document, eventName, data)\n  }\n\n  // Number of active Ajax requests\n  $.active = 0\n\n  function ajaxStart(settings) {\n    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n  }\n  function ajaxStop(settings) {\n    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n  }\n\n  // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n  function ajaxBeforeSend(xhr, settings) {\n    var context = settings.context\n    if (settings.beforeSend.call(context, xhr, settings) === false ||\n        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n      return false\n\n    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n  }\n  function ajaxSuccess(data, xhr, settings, deferred) {\n    var context = settings.context, status = 'success'\n    settings.success.call(context, data, status, xhr)\n    if (deferred) deferred.resolveWith(context, [data, status, xhr])\n    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n    ajaxComplete(status, xhr, settings)\n  }\n  // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n  function ajaxError(error, type, xhr, settings, deferred) {\n    var context = settings.context\n    settings.error.call(context, xhr, type, error)\n    if (deferred) deferred.rejectWith(context, [xhr, type, error])\n    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n    ajaxComplete(type, xhr, settings)\n  }\n  // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n  function ajaxComplete(status, xhr, settings) {\n    var context = settings.context\n    settings.complete.call(context, xhr, status)\n    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n    ajaxStop(settings)\n  }\n\n  // Empty function, used as default callback\n  function empty() {}\n\n  $.ajaxJSONP = function(options, deferred){\n    if (!('type' in options)) return $.ajax(options)\n\n    var _callbackName = options.jsonpCallback,\n      callbackName = ($.isFunction(_callbackName) ?\n        _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\n      script = document.createElement('script'),\n      originalCallback = window[callbackName],\n      responseData,\n      abort = function(errorType) {\n        $(script).triggerHandler('error', errorType || 'abort')\n      },\n      xhr = { abort: abort }, abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    $(script).on('load error', function(e, errorType){\n      clearTimeout(abortTimeout)\n      $(script).off().remove()\n\n      if (e.type == 'error' || !responseData) {\n        ajaxError(null, errorType || 'error', xhr, options, deferred)\n      } else {\n        ajaxSuccess(responseData[0], xhr, options, deferred)\n      }\n\n      window[callbackName] = originalCallback\n      if (responseData && $.isFunction(originalCallback))\n        originalCallback(responseData[0])\n\n      originalCallback = responseData = undefined\n    })\n\n    if (ajaxBeforeSend(xhr, options) === false) {\n      abort('abort')\n      return xhr\n    }\n\n    window[callbackName] = function(){\n      responseData = arguments\n    }\n\n    script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\n    document.head.appendChild(script)\n\n    if (options.timeout > 0) abortTimeout = setTimeout(function(){\n      abort('timeout')\n    }, options.timeout)\n\n    return xhr\n  }\n\n  $.ajaxSettings = {\n    // Default type of request\n    type: 'GET',\n    // Callback that is executed before request\n    beforeSend: empty,\n    // Callback that is executed if the request succeeds\n    success: empty,\n    // Callback that is executed the the server drops error\n    error: empty,\n    // Callback that is executed on request complete (both: error and success)\n    complete: empty,\n    // The context for the callbacks\n    context: null,\n    // Whether to trigger \"global\" Ajax events\n    global: true,\n    // Transport\n    xhr: function () {\n      return new window.XMLHttpRequest()\n    },\n    // MIME types mapping\n    // IIS returns Javascript as \"application/x-javascript\"\n    accepts: {\n      script: 'text/javascript, application/javascript, application/x-javascript',\n      json:   jsonType,\n      xml:    'application/xml, text/xml',\n      html:   htmlType,\n      text:   'text/plain'\n    },\n    // Whether the request is to another domain\n    crossDomain: false,\n    // Default timeout\n    timeout: 0,\n    // Whether data should be serialized to string\n    processData: true,\n    // Whether the browser should be allowed to cache GET responses\n    cache: true\n  }\n\n  function mimeToDataType(mime) {\n    if (mime) mime = mime.split(';', 2)[0]\n    return mime && ( mime == htmlType ? 'html' :\n      mime == jsonType ? 'json' :\n      scriptTypeRE.test(mime) ? 'script' :\n      xmlTypeRE.test(mime) && 'xml' ) || 'text'\n  }\n\n  function appendQuery(url, query) {\n    if (query == '') return url\n    return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n  }\n\n  // serialize payload and append it to the URL for GET requests\n  function serializeData(options) {\n    if (options.processData && options.data && $.type(options.data) != \"string\")\n      options.data = $.param(options.data, options.traditional)\n    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\n      options.url = appendQuery(options.url, options.data), options.data = undefined\n  }\n\n  $.ajax = function(options){\n    var settings = $.extend({}, options || {}),\n        deferred = $.Deferred && $.Deferred(),\n        urlAnchor\n    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n    ajaxStart(settings)\n\n    if (!settings.crossDomain) {\n      urlAnchor = document.createElement('a')\n      urlAnchor.href = settings.url\n      urlAnchor.href = urlAnchor.href\n      settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\n    }\n\n    if (!settings.url) settings.url = window.location.toString()\n    serializeData(settings)\n\n    var dataType = settings.dataType, hasPlaceholder = /\\?.+=\\?/.test(settings.url)\n    if (hasPlaceholder) dataType = 'jsonp'\n\n    if (settings.cache === false || (\n         (!options || options.cache !== true) &&\n         ('script' == dataType || 'jsonp' == dataType)\n        ))\n      settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n    if ('jsonp' == dataType) {\n      if (!hasPlaceholder)\n        settings.url = appendQuery(settings.url,\n          settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\n      return $.ajaxJSONP(settings, deferred)\n    }\n\n    var mime = settings.accepts[dataType],\n        headers = { },\n        setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n        protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n        xhr = settings.xhr(),\n        nativeSetHeader = xhr.setRequestHeader,\n        abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\n    setHeader('Accept', mime || '*/*')\n    if (mime = settings.mimeType || mime) {\n      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n      xhr.overrideMimeType && xhr.overrideMimeType(mime)\n    }\n    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n      setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n\n    if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])\n    xhr.setRequestHeader = setHeader\n\n    xhr.onreadystatechange = function(){\n      if (xhr.readyState == 4) {\n        xhr.onreadystatechange = empty\n        clearTimeout(abortTimeout)\n        var result, error = false\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n          dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n          result = xhr.responseText\n\n          try {\n            // http://perfectionkills.com/global-eval-what-are-the-options/\n            if (dataType == 'script')    (1,eval)(result)\n            else if (dataType == 'xml')  result = xhr.responseXML\n            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n          } catch (e) { error = e }\n\n          if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\n          else ajaxSuccess(result, xhr, settings, deferred)\n        } else {\n          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\n        }\n      }\n    }\n\n    if (ajaxBeforeSend(xhr, settings) === false) {\n      xhr.abort()\n      ajaxError(null, 'abort', xhr, settings, deferred)\n      return xhr\n    }\n\n    if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n\n    var async = 'async' in settings ? settings.async : true\n    xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n    for (name in headers) nativeSetHeader.apply(xhr, headers[name])\n\n    if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n        xhr.onreadystatechange = empty\n        xhr.abort()\n        ajaxError(null, 'timeout', xhr, settings, deferred)\n      }, settings.timeout)\n\n    // avoid sending empty string (#319)\n    xhr.send(settings.data ? settings.data : null)\n    return xhr\n  }\n\n  // handle optional data/success arguments\n  function parseArguments(url, data, success, dataType) {\n    if ($.isFunction(data)) dataType = success, success = data, data = undefined\n    if (!$.isFunction(success)) dataType = success, success = undefined\n    return {\n      url: url\n    , data: data\n    , success: success\n    , dataType: dataType\n    }\n  }\n\n  $.get = function(/* url, data, success, dataType */){\n    return $.ajax(parseArguments.apply(null, arguments))\n  }\n\n  $.post = function(/* url, data, success, dataType */){\n    var options = parseArguments.apply(null, arguments)\n    options.type = 'POST'\n    return $.ajax(options)\n  }\n\n  $.getJSON = function(/* url, data, success */){\n    var options = parseArguments.apply(null, arguments)\n    options.dataType = 'json'\n    return $.ajax(options)\n  }\n\n  $.fn.load = function(url, data, success){\n    if (!this.length) return this\n    var self = this, parts = url.split(/\\s/), selector,\n        options = parseArguments(url, data, success),\n        callback = options.success\n    if (parts.length > 1) options.url = parts[0], selector = parts[1]\n    options.success = function(response){\n      self.html(selector ?\n        $('<div>').html(response.replace(rscript, \"\")).find(selector)\n        : response)\n      callback && callback.apply(self, arguments)\n    }\n    $.ajax(options)\n    return this\n  }\n\n  var escape = encodeURIComponent\n\n  function serialize(params, obj, traditional, scope){\n    var type, array = $.isArray(obj), hash = $.isPlainObject(obj)\n    $.each(obj, function(key, value) {\n      type = $.type(value)\n      if (scope) key = traditional ? scope :\n        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\n      // handle data in serializeArray() format\n      if (!scope && array) params.add(value.name, value.value)\n      // recurse into nested objects\n      else if (type == \"array\" || (!traditional && type == \"object\"))\n        serialize(params, value, traditional, key)\n      else params.add(key, value)\n    })\n  }\n\n  $.param = function(obj, traditional){\n    var params = []\n    params.add = function(key, value) {\n      if ($.isFunction(value)) value = value()\n      if (value == null) value = \"\"\n      this.push(escape(key) + '=' + escape(value))\n    }\n    serialize(params, obj, traditional)\n    return params.join('&').replace(/%20/g, '+')\n  }\n})(Zepto)\n\n;(function($){\n  $.fn.serializeArray = function() {\n    var name, type, result = [],\n      add = function(value) {\n        if (value.forEach) return value.forEach(add)\n        result.push({ name: name, value: value })\n      }\n    if (this[0]) $.each(this[0].elements, function(_, field){\n      type = field.type, name = field.name\n      if (name && field.nodeName.toLowerCase() != 'fieldset' &&\n        !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\n        ((type != 'radio' && type != 'checkbox') || field.checked))\n          add($(field).val())\n    })\n    return result\n  }\n\n  $.fn.serialize = function(){\n    var result = []\n    this.serializeArray().forEach(function(elm){\n      result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\n    })\n    return result.join('&')\n  }\n\n  $.fn.submit = function(callback) {\n    if (0 in arguments) this.bind('submit', callback)\n    else if (this.length) {\n      var event = $.Event('submit')\n      this.eq(0).trigger(event)\n      if (!event.isDefaultPrevented()) this.get(0).submit()\n    }\n    return this\n  }\n\n})(Zepto);\n\n(function($){\n  // __proto__ doesn't exist on IE<11, so redefine\n  // the Z function to use object extension instead\n  if (!('__proto__' in {})) {\n    $.extend($.zepto, {\n      Z: function(dom, selector){\n        dom = dom || []\n        $.extend(dom, $.fn)\n        dom.selector = selector || ''\n        dom.__Z = true\n        return dom\n      },\n      // this is a kludge but works\n      isZ: function(object){\n        return $.type(object) === 'array' && '__Z' in object\n      }\n    })\n  }\n\n  // getComputedStyle shouldn't freak out when called\n  // without a valid element as argument\n  try {\n    getComputedStyle(undefined)\n  } catch(e) {\n    var nativeGetComputedStyle = getComputedStyle;\n    window.getComputedStyle = function(element){\n      try {\n        return nativeGetComputedStyle(element)\n      } catch(e) {\n        return null\n      }\n    }\n  }\n})(Zepto);\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","//     Backbone.js 1.2.3\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self == self && self) ||\n            (typeof global == 'object' && global.global == global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch(e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n        context: context,\n        ctx: obj,\n        listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo =  function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off =  function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening =  function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once =  function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce =  function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger =  function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.defaults({validate: true}, options));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    for (var i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.defaults({}, options, setOptions);\n      if (options.parse && !this._isModel(models)) models = this.parse(models, options);\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model;\n      for (var i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length != set.length || _.some(this.models, function(model, index) {\n          return model !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed.length ? removed : false;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n","/**\n * Backbone localStorage Adapter\n * Version 1.1.16\n *\n * https://github.com/jeromegn/Backbone.localStorage\n */\n(function (root, factory) {\n  if (typeof exports === 'object' && typeof require === 'function') {\n    module.exports = factory(require(\"backbone\"));\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"backbone\"], function(Backbone) {\n      // Use global variables if the locals are undefined.\n      return factory(Backbone || root.Backbone);\n    });\n  } else {\n    factory(Backbone);\n  }\n}(this, function(Backbone) {\n// A simple module to replace `Backbone.sync` with *localStorage*-based\n// persistence. Models are given GUIDS, and saved into a JSON object. Simple\n// as that.\n\n// Generate four random hex digits.\nfunction S4() {\n   return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n};\n\n// Generate a pseudo-GUID by concatenating random hexadecimal.\nfunction guid() {\n   return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n};\n\nfunction isObject(item) {\n  return item === Object(item);\n}\n\nfunction contains(array, item) {\n  var i = array.length;\n  while (i--) if (array[i] === item) return true;\n  return false;\n}\n\nfunction extend(obj, props) {\n  for (var key in props) obj[key] = props[key]\n  return obj;\n}\n\nfunction result(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return (typeof value === 'function') ? object[property]() : value;\n}\n\n// Our Store is represented by a single JS object in *localStorage*. Create it\n// with a meaningful name, like the name you'd give a table.\n// window.Store is deprectated, use Backbone.LocalStorage instead\nBackbone.LocalStorage = window.Store = function(name, serializer) {\n  if( !this.localStorage ) {\n    throw \"Backbone.localStorage: Environment does not support localStorage.\"\n  }\n  this.name = name;\n  this.serializer = serializer || {\n    serialize: function(item) {\n      return isObject(item) ? JSON.stringify(item) : item;\n    },\n    // fix for \"illegal access\" error on Android when JSON.parse is passed null\n    deserialize: function (data) {\n      return data && JSON.parse(data);\n    }\n  };\n  var store = this.localStorage().getItem(this.name);\n  this.records = (store && store.split(\",\")) || [];\n};\n\nextend(Backbone.LocalStorage.prototype, {\n\n  // Save the current state of the **Store** to *localStorage*.\n  save: function() {\n    this.localStorage().setItem(this.name, this.records.join(\",\"));\n  },\n\n  // Add a model, giving it a (hopefully)-unique GUID, if it doesn't already\n  // have an id of it's own.\n  create: function(model) {\n    if (!model.id && model.id !== 0) {\n      model.id = guid();\n      model.set(model.idAttribute, model.id);\n    }\n    this.localStorage().setItem(this._itemName(model.id), this.serializer.serialize(model));\n    this.records.push(model.id.toString());\n    this.save();\n    return this.find(model);\n  },\n\n  // Update a model by replacing its copy in `this.data`.\n  update: function(model) {\n    this.localStorage().setItem(this._itemName(model.id), this.serializer.serialize(model));\n    var modelId = model.id.toString();\n    if (!contains(this.records, modelId)) {\n      this.records.push(modelId);\n      this.save();\n    }\n    return this.find(model);\n  },\n\n  // Retrieve a model from `this.data` by id.\n  find: function(model) {\n    return this.serializer.deserialize(this.localStorage().getItem(this._itemName(model.id)));\n  },\n\n  // Return the array of all models currently in storage.\n  findAll: function() {\n    var result = [];\n    for (var i = 0, id, data; i < this.records.length; i++) {\n      id = this.records[i];\n      data = this.serializer.deserialize(this.localStorage().getItem(this._itemName(id)));\n      if (data != null) result.push(data);\n    }\n    return result;\n  },\n\n  // Delete a model from `this.data`, returning it.\n  destroy: function(model) {\n    this.localStorage().removeItem(this._itemName(model.id));\n    var modelId = model.id.toString();\n    for (var i = 0, id; i < this.records.length; i++) {\n      if (this.records[i] === modelId) {\n        this.records.splice(i, 1);\n      }\n    }\n    this.save();\n    return model;\n  },\n\n  localStorage: function() {\n    return localStorage;\n  },\n\n  // Clear localStorage for specific collection.\n  _clear: function() {\n    var local = this.localStorage(),\n      itemRe = new RegExp(\"^\" + this.name + \"-\");\n\n    // Remove id-tracking item (e.g., \"foo\").\n    local.removeItem(this.name);\n\n    // Match all data items (e.g., \"foo-ID\") and remove.\n    for (var k in local) {\n      if (itemRe.test(k)) {\n        local.removeItem(k);\n      }\n    }\n\n    this.records.length = 0;\n  },\n\n  // Size of localStorage.\n  _storageSize: function() {\n    return this.localStorage().length;\n  },\n\n  _itemName: function(id) {\n    return this.name+\"-\"+id;\n  }\n\n});\n\n// localSync delegate to the model or collection's\n// *localStorage* property, which should be an instance of `Store`.\n// window.Store.sync and Backbone.localSync is deprecated, use Backbone.LocalStorage.sync instead\nBackbone.LocalStorage.sync = window.Store.sync = Backbone.localSync = function(method, model, options) {\n  var store = result(model, 'localStorage') || result(model.collection, 'localStorage');\n\n  var resp, errorMessage;\n  //If $ is having Deferred - use it.\n  var syncDfd = Backbone.$ ?\n    (Backbone.$.Deferred && Backbone.$.Deferred()) :\n    (Backbone.Deferred && Backbone.Deferred());\n\n  try {\n\n    switch (method) {\n      case \"read\":\n        resp = model.id != undefined ? store.find(model) : store.findAll();\n        break;\n      case \"create\":\n        resp = store.create(model);\n        break;\n      case \"update\":\n        resp = store.update(model);\n        break;\n      case \"delete\":\n        resp = store.destroy(model);\n        break;\n    }\n\n  } catch(error) {\n    if (error.code === 22 && store._storageSize() === 0)\n      errorMessage = \"Private browsing is unsupported\";\n    else\n      errorMessage = error.message;\n  }\n\n  if (resp) {\n    if (options && options.success) {\n      if (Backbone.VERSION === \"0.9.10\") {\n        options.success(model, resp, options);\n      } else {\n        options.success(resp);\n      }\n    }\n    if (syncDfd) {\n      syncDfd.resolve(resp);\n    }\n\n  } else {\n    errorMessage = errorMessage ? errorMessage\n                                : \"Record Not Found\";\n\n    if (options && options.error)\n      if (Backbone.VERSION === \"0.9.10\") {\n        options.error(model, errorMessage, options);\n      } else {\n        options.error(errorMessage);\n      }\n\n    if (syncDfd)\n      syncDfd.reject(errorMessage);\n  }\n\n  // add compatibility with $.ajax\n  // always execute callback for success and error\n  if (options && options.complete) options.complete(resp);\n\n  return syncDfd && syncDfd.promise();\n};\n\nBackbone.ajaxSync = Backbone.sync;\n\nBackbone.getSyncMethod = function(model, options) {\n  var forceAjaxSync = options && options.ajaxSync;\n\n  if(!forceAjaxSync && (result(model, 'localStorage') || result(model.collection, 'localStorage'))) {\n    return Backbone.localSync;\n  }\n\n  return Backbone.ajaxSync;\n};\n\n// Override 'Backbone.sync' to default to localSync,\n// the original 'Backbone.sync' is still available in 'Backbone.ajaxSync'\nBackbone.sync = function(method, model, options) {\n  return Backbone.getSyncMethod(model, options).apply(this, [method, model, options]);\n};\n\nreturn Backbone.LocalStorage;\n}));\n"],"sourceRoot":"/source/"}