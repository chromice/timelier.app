{"version":3,"sources":["main.js","zepto.js","underscore.js","backbone.js","backbone.localStorage.js"],"names":["pad","n","width","z","length","Array","join","noSync","method","model","options","id","Math","floor","random","success","boostrapTimerCollection","timers","TimerCollection","now","Date","setHours","getHours","setMinutes","getMinutes","reset","started_on","toISOString","description","entries","logged_on","manually","value","Zepto","type","obj","String","class2type","toString","call","isFunction","isWindow","window","isDocument","nodeType","DOCUMENT_NODE","isObject","isPlainObject","Object","getPrototypeOf","prototype","likeArray","compact","array","filter","item","flatten","$","fn","concat","apply","dasherize","str","replace","toLowerCase","classRE","name","classCache","RegExp","maybeAddPx","cssNumber","defaultDisplay","nodeName","element","display","elementDisplay","document","createElement","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","children","slice","map","childNodes","node","extend","target","source","deep","key","isArray","undefined","filtered","nodes","selector","funcArg","context","arg","idx","payload","setAttribute","removeAttribute","className","klass","svg","baseVal","deserializeValue","test","parseJSON","e","traverseNode","fun","i","len","classList","camelize","uniq","emptyArray","column-count","columns","font-weight","line-height","opacity","z-index","zoom","fragmentRE","singleTagRE","tagExpanderRE","rootNodeRE","capitalRE","methodAttributes","adjacencyOperators","table","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","readyRE","simpleSelectorRE","zepto","tempParent","propMap","tabindex","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","object","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","match","parent","temp","qsa","indexOf","chr","toUpperCase","fragment","html","properties","dom","container","$1","innerHTML","each","this","attr","Z","__proto__","isZ","init","trim","find","ready","args","arguments","shift","forEach","found","maybeID","maybeClass","nameOnly","isSimple","getElementById","getElementsByClassName","getElementsByTagName","querySelectorAll","contains","documentElement","isEmptyObject","inArray","elem","camelCase","uuid","support","expr","elements","callback","values","push","grep","JSON","parse","split","reduce","sort","el","readyState","addEventListener","get","toArray","size","remove","every","not","add","is","excludes","has","eq","first","last","result","$this","some","closest","collection","parents","ancestors","pluck","contents","siblings","child","empty","property","show","style","replaceWith","newContent","before","wrap","structure","func","clone","index","wrapAll","cloneNode","append","wrapInner","self","unwrap","hide","css","toggle","setting","prev","next","originHtml","text","newText","textContent","getAttribute","removeAttr","attribute","prop","data","attrName","val","multiple","selected","offset","coordinates","coords","parentOffset","offsetParent","props","top","left","getBoundingClientRect","pageXOffset","pageYOffset","round","height","computedStyle","_","removeProperty","cssText","hasClass","addClass","cls","newName","removeClass","toggleClass","when","names","scrollTop","hasScrollTop","scrollTo","scrollX","scrollLeft","hasScrollLeft","scrollY","position","parseFloat","detach","dimension","dimensionProperty","m","operator","operatorIndex","inside","argType","copyByClone","nextSibling","firstChild","parentInDocument","insertBefore","src","zid","_zid","findHandlers","event","ns","matcher","matcherFor","handlers","handler","sel","parts","eventCapture","captureSetting","del","focusinSupported","focus","realEvent","hover","events","delegator","capture","set","related","relatedTarget","proxy","compatible","isImmediatePropagationStopped","_args","preventDefault","stopPropagation","removeEventListener","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","defaultPrevented","returnValue","getPreventDefault","createProxy","originalEvent","ignoreProperties","isString","specialEvents","blur","mouseenter","mouseleave","click","mousedown","mouseup","mousemove","proxyFn","unshift","TypeError","bind","on","unbind","off","one","stopImmediatePropagation","delegate","undelegate","live","die","autoRemove","evt","currentTarget","liveFired","trigger","Event","dispatchEvent","triggerHandler","createEvent","bubbles","initEvent","triggerAndReturn","eventName","triggerGlobal","settings","global","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","deferred","status","resolveWith","ajaxComplete","ajaxError","error","rejectWith","complete","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","url","query","serializeData","processData","param","traditional","parseArguments","dataType","serialize","params","scope","hash","jsonpID","rscript","blankRE","originAnchor","href","location","ajaxJSONP","ajax","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","script","originalCallback","abort","errorType","promise","clearTimeout","head","timeout","setTimeout","ajaxSettings","XMLHttpRequest","accepts","json","xml","crossDomain","cache","urlAnchor","Deferred","protocol","host","hasPlaceholder","jsonp","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseText","eval","responseXML","statusText","xhrFields","async","open","username","password","send","post","getJSON","load","response","escape","encodeURIComponent","serializeArray","field","disabled","checked","elm","submit","__Z","nativeGetComputedStyle","createReduce","dir","iterator","iteratee","memo","keys","currentKey","optimizeCb","isArrayLike","createPredicateIndexFinder","cb","getLength","createIndexFinder","predicateFind","sortedIndex","max","min","isNaN","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","ObjProto","root","previousUnderscore","ArrayProto","FuncProto","Function","hasOwnProperty","nativeIsArray","nativeKeys","nativeBind","nativeCreate","create","Ctor","_wrapped","exports","module","VERSION","argCount","other","accumulator","identity","Infinity","createAssigner","keysFunc","undefinedOnly","l","baseCreate","MAX_ARRAY_INDEX","pow","collect","results","foldl","inject","reduceRight","foldr","detect","findIndex","findKey","select","list","reject","negate","all","any","includes","include","fromIndex","guard","invoke","isFunc","where","attrs","findWhere","computed","lastComputed","shuffle","rand","shuffled","sample","sortBy","criteria","right","a","b","group","behavior","groupBy","indexBy","countBy","partition","pass","fail","take","initial","rest","tail","drop","input","shallow","strict","startIndex","output","isArguments","j","without","difference","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","findLastIndex","low","high","mid","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","bound","partial","boundArgs","bindAll","Error","memoize","hasher","address","delay","wait","defer","throttle","previous","later","leading","remaining","trailing","debounce","immediate","timestamp","callNow","wrapper","compose","after","times","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","extendOwn","assign","pick","oiteratee","omit","defaults","tap","interceptor","isMatch","aStack","bStack","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isElement","Int8Array","isFinite","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","accum","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","string","unescape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","oldSettings","variable","render","argument","chain","instance","_chain","mixin","valueOf","toJSON","define","amd","factory","Backbone","require","jQuery","ender","previousBackbone","emulateHTTP","emulateJSON","addMethod","defaultVal","addUnderscoreMethods","Class","_isModel","modelMatcher","attributes","Events","eventSplitter","eventsApi","opts","internalOn","listening","_events","onApi","ctx","listeners","_listeners","listenTo","_listenId","listeningTo","_listeningTo","thisId","objId","count","offApi","stopListening","ids","_callback","onceMap","listenToOnce","offer","triggerApi","objEvents","allEvents","triggerEvents","ev","a1","a2","a3","Model","cid","cidPrefix","changed","initialize","validationError","idAttribute","sync","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","fetch","resp","serverAttrs","wrapError","save","validate","isNew","patch","destroy","base","urlError","isValid","modelMethods","Collection","models","comparator","_reset","setOptions","merge","addOptions","splice","insert","at","singular","removed","_removeModels","toAdd","toRemove","modelMap","sortable","sortAttr","existing","_prepareModel","_addReference","orderChanged","_removeReference","previousModels","modelId","_byId","callbackOpts","_onModelEvent","prevId","collectionMethods","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","$el","_removeElement","setElement","undelegateEvents","_setElement","delegateEvents","listener","_createElement","_setAttributes","methodMap","stringify","_method","textStatus","errorThrown","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","_extractParameters","execute","navigate","optional","exec","decodeURIComponent","History","checkUrl","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","decodeURI","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","tabIndex","iWindow","contentWindow","close","attachEvent","_checkUrlInterval","setInterval","loadUrl","detachEvent","clearInterval","title","_updateHash","protoProps","staticProps","Surrogate","__super__","S4","substring","guid","LocalStorage","Store","serializer","localStorage","deserialize","store","getItem","records","setItem","_itemName","findAll","removeItem","_clear","local","itemRe","k","_storageSize","localSync","errorMessage","syncDfd","code","message","resolve","ajaxSync","getSyncMethod","forceAjaxSync","TimerModel","EntryCollection","EntryModel","DateModel","date","getFullYear","getMonth","getDate","DateCollection","AppComponent","calendar","CalendarPane","DescriptionPane","time","TimePane","showCalendar","showDescripion","showTime","click button","console","log","startNewTimer","CalendarDateView","TimerView","","description/:id","time/:id/:date","app","main"],"mappings":"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","file":"scripts.js","sourcesContent":["// ==========\n// = Models =\n// ==========\n\nvar TimerModel = Backbone.Model.extend({\n\tdefaults: function () {\n\t\tvar now = new Date();\n\t\t\n\t\treturn {\n\t\t\t'started_on': now.toISOString(),\n\t\t\t'description': ''\n\t\t};\n\t},\n\t\n\tconstructor: function(attributes) {\n\t\tthis.entries = new EntryCollection(attributes.entries || null);\n\t\t\n\t\tdelete attributes.entries;\n\t\t\n\t\tBackbone.Model.apply(this, arguments);\n\t},\n});\n\nvar EntryModel = Backbone.Model.extend({\n\tdefaults: function () {\n\t\tvar now = new Date();\n\t\t\n\t\treturn {\n\t\t\t'logged_on': now.toISOString(),\n\t\t\t'manually': false,\n\t\t\t'value': 0,\n\t\t};\n\t},\n});\n\nvar DateModel = Backbone.Model.extend({\n\tconstructor: function(attributes) {\n\t\t// Make sure id is a date string\n\t\tvar date = attributes.id || new Date();\n\t\tattributes.id = pad(date.getFullYear(), 4) + '-' + pad(date.getMonth(), 2) + '-' + pad(date.getDate(), 2);\n\t\t\n\t\tthis.entries = new EntryCollection();\n\t\t\n\t\tBackbone.Model.apply(this, arguments);\n\t},\n\tsync: noSync,\n});\n\n// ===============\n// = Collections =\n// ===============\n\nvar TimerCollection = Backbone.Collection.extend({\n\tmodel: TimerModel,\n}, {\n\tall: function () {\n\t\treturn boostrapTimerCollection();\n\t},\n});\n\nvar EntryCollection = Backbone.Collection.extend({\n\tmodel: EntryModel,\n});\n\nvar DateCollection = Backbone.Collection.extend({\n\tmodel: DateModel,\n\tsync: noSync,\n});\n\n// ==============\n// = Components =\n// ==============\n\n// ------------------\n// - Main component -\n// ------------------\n\nvar AppComponent = Backbone.View.extend({\n\tel: 'body',\n\t\n\tinitialize: function (options) {\n\t\tthis.router = options.router;\n\t\t\n\t\tthis.calendar = new CalendarPane();\n\t\tthis.description = new DescriptionPane();\n\t\tthis.time = new TimePane();\n\t\t\n\t\tthis.render();\n\t},\n\t\n\trender: function () {\n\t\treturn this.$el.empty()\n\t\t\t.append(this.calendar.render())\n\t\t\t.append(this.description.render())\n\t\t\t.append(this.time.render());\n\t},\n\t\n\t/* \\\\ -^_^- // */\n\t\n\tshowCalendar: function () {\n\t\t\n\t},\n\t\n\tshowDescripion: function (id) {\n\t\t\n\t},\n\t\n\tshowTime: function (id, date) {\n\t\t\n\t},\n});\n\n\n// -----------------------\n// - Calendar components -\n// -----------------------\n\nvar CalendarPane = Backbone.View.extend({\n\tid: 'main',\n\ttagName: 'main',\n\tevents: {\n\t\t'click button': 'startNewTimer',\n\t},\n\t\n\tinitialize: function () {\n\t\tthis.timers = TimerCollection.all();\n\t\tconsole.log(this.timers);\n\t\t\n\t\tthis.calendar = new DateCollection();\n\t},\n\t\n\trender: function () {\n\t\tthis.$el.empty()\n\t\t\t.append('<header>' +\n\t\t\t\t'<h1>Timer</h1>' +\n\t\t\t\t'<button>Start new</button>' +\n\t\t\t'</header>');\n\t\t\n\t\treturn this.$el;\n\t},\n\t\n\t/* \\\\ -^_^- // */\n\t\n\tstartNewTimer: function (e) {\n\t\t// TODO: Disable function for a second to prevent accidental double entry.\n\t\t\n\t\tthis.timers.add({});\n\t\t\n\t\tconsole.log(this.timers);\n\t},\n});\n\nvar CalendarDateView = Backbone.View.extend({\n\ttagName: 'section',\n});\n\nvar TimerView = Backbone.View.extend({\n\ttagName: 'article',\n});\n\n\n// --------------------------\n// - Description components -\n// --------------------------\n\nvar DescriptionPane = Backbone.View.extend({\n\tid: 'description',\n\ttagName: 'aside',\n\t\n\trender: function () {\n\t\treturn this.$el.empty();\n\t},\n});\n\n// -------------------\n// - Time components -\n// -------------------\n\nvar TimePane = Backbone.View.extend({\n\tid: 'timer',\n\ttagName: 'aside',\n\t\n\trender: function () {\n\t\treturn this.$el.empty();\n\t},\n});\n\n\n\n// ==========\n// = Router =\n// ==========\n\nvar Router = Backbone.Router.extend({\n\troutes: {\n\t\t'': 'main',\n\t\t'description/:id': 'description',\n\t\t'time/:id/:date': 'time',\n\t},\n\t\n\tinitialize: function () {\n\t\tthis.app = new AppComponent({\n\t\t\trouter: this,\n\t\t});\n\t},\n\t\n\tmain: function () {\n\t\tconsole.log('List all timers');\n\t\t\n\t\tthis.app.showCalendar();\n\t},\n\t\n\tdescription: function (id) {\n\t\tconsole.log('Edit details for timer #' + id);\n\t\t\n\t\tthis.app.showDescripion(id);\n\t},\n\t\n\ttime: function (id, date) {\n\t\tconsole.log('Change logged time for timer #' + id);\n\t\t\n\t\tthis.app.showTime(id, date);\n\t},\n});\n\n\n// ========\n// = Main =\n// ========\n\n// Punch sync out\nBackbone.sync = noSync;\n\n// Start application\n$(function () {\n\tvar app = new Router();\n\n\tBackbone.history.start();\n});\n\n\n// ===========\n// = Helpers =\n// ===========\n\nfunction pad(n, width, z) {\n\tz = z || '0';\n\tn = n + '';\n\treturn n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nfunction noSync(method, model, options) {\n\tvar id = model.id || Math.floor(Math.random() * 100000);\n\toptions.success({id: id}, 'status', {});\n}\n\nfunction boostrapTimerCollection () {\n\t\n\t// Bootstap us some data\n\tvar timers = new TimerCollection();\n\n\t// Calculate active timer\n\tvar now = new Date();\n\n\tnow.setHours(now.getHours() - 1);\n\tnow.setMinutes(now.getMinutes() - 15);\n\n\ttimers.reset([\n\t\t{\n\t\t\t'started_on': now.toISOString(),\n\t\t\t'description': 'Working on presentation for Project X',\n\t\t\t'entries': [],\n\t\t},\n\t\t{\n\t\t\t'started_on': false,\n\t\t\t'description': 'Walking the dog',\n\t\t\t'entries': [\n\t\t\t\t{\n\t\t\t\t\t'logged_on': '2016-02-06T14:17:19.616Z',\n\t\t\t\t\t'manually': false,\n\t\t\t\t\t'value': 54 * 60,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'logged_on': '2016-02-05T14:40:00.616Z',\n\t\t\t\t\t'manually': false,\n\t\t\t\t\t'value': 80 * 60,\n\t\t\t\t},\n\t\t\t\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'started_on': false,\n\t\t\t'description': 'Playing videogames',\n\t\t\t'entries': [\n\t\t\t\t{\n\t\t\t\t\t'logged_on': '2016-02-06T02:20:00.616Z',\n\t\t\t\t\t'manually': false,\n\t\t\t\t\t'value': 70 * 60,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'logged_on': '2016-02-06T02:20:00.616Z',\n\t\t\t\t\t'manually': false,\n\t\t\t\t\t'value': 130 * 60,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'logged_on': '2016-02-05T18:20:00.000Z',\n\t\t\t\t\t'manually': true,\n\t\t\t\t\t'value': -20 * 60,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'logged_on': '2016-02-05T18:40:00.616Z',\n\t\t\t\t\t'manually': false,\n\t\t\t\t\t'value': 155 * 60,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'started_on': false,\n\t\t\t'description': 'Making music',\n\t\t\t'entries': [\n\t\t\t\t{\n\t\t\t\t\t'logged_on': '2016-02-05T22:15:00.000Z',\n\t\t\t\t\t'manually': true,\n\t\t\t\t\t'value': 31 * 60,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\t'started_on': false,\n\t\t\t'description': 'Designing this app',\n\t\t\t'entries': [\n\t\t\t\t{\n\t\t\t\t\t'logged_on': '2016-02-05T15:15:00.000Z',\n\t\t\t\t\t'manually': false,\n\t\t\t\t\t'value': 55 * 60,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'logged_on': '2016-02-05T13:22:00.000Z',\n\t\t\t\t\t'manually': false,\n\t\t\t\t\t'value': 200 * 60,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t]);\n\t\n\treturn timers;\n}","/* Zepto v1.1.6 - zepto event ajax form ie - zeptojs.com/license */\n\nvar Zepto = (function() {\n  var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,\n    document = window.document,\n    elementDisplay = {}, classCache = {},\n    cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\n    fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n    singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n    tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n    rootNodeRE = /^(?:body|html)$/i,\n    capitalRE = /([A-Z])/g,\n\n    // special attributes that should be get/set via method calls\n    methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\n    adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\n    table = document.createElement('table'),\n    tableRow = document.createElement('tr'),\n    containers = {\n      'tr': document.createElement('tbody'),\n      'tbody': table, 'thead': table, 'tfoot': table,\n      'td': tableRow, 'th': tableRow,\n      '*': document.createElement('div')\n    },\n    readyRE = /complete|loaded|interactive/,\n    simpleSelectorRE = /^[\\w-]*$/,\n    class2type = {},\n    toString = class2type.toString,\n    zepto = {},\n    camelize, uniq,\n    tempParent = document.createElement('div'),\n    propMap = {\n      'tabindex': 'tabIndex',\n      'readonly': 'readOnly',\n      'for': 'htmlFor',\n      'class': 'className',\n      'maxlength': 'maxLength',\n      'cellspacing': 'cellSpacing',\n      'cellpadding': 'cellPadding',\n      'rowspan': 'rowSpan',\n      'colspan': 'colSpan',\n      'usemap': 'useMap',\n      'frameborder': 'frameBorder',\n      'contenteditable': 'contentEditable'\n    },\n    isArray = Array.isArray ||\n      function(object){ return object instanceof Array }\n\n  zepto.matches = function(element, selector) {\n    if (!selector || !element || element.nodeType !== 1) return false\n    var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||\n                          element.oMatchesSelector || element.matchesSelector\n    if (matchesSelector) return matchesSelector.call(element, selector)\n    // fall back to performing a selector:\n    var match, parent = element.parentNode, temp = !parent\n    if (temp) (parent = tempParent).appendChild(element)\n    match = ~zepto.qsa(parent, selector).indexOf(element)\n    temp && tempParent.removeChild(element)\n    return match\n  }\n\n  function type(obj) {\n    return obj == null ? String(obj) :\n      class2type[toString.call(obj)] || \"object\"\n  }\n\n  function isFunction(value) { return type(value) == \"function\" }\n  function isWindow(obj)     { return obj != null && obj == obj.window }\n  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\n  function isObject(obj)     { return type(obj) == \"object\" }\n  function isPlainObject(obj) {\n    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype\n  }\n  function likeArray(obj) { return typeof obj.length == 'number' }\n\n  function compact(array) { return filter.call(array, function(item){ return item != null }) }\n  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\n  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\n  function dasherize(str) {\n    return str.replace(/::/g, '/')\n           .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n           .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n           .replace(/_/g, '-')\n           .toLowerCase()\n  }\n  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\n\n  function classRE(name) {\n    return name in classCache ?\n      classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\n  }\n\n  function maybeAddPx(name, value) {\n    return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n  }\n\n  function defaultDisplay(nodeName) {\n    var element, display\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName)\n      document.body.appendChild(element)\n      display = getComputedStyle(element, '').getPropertyValue(\"display\")\n      element.parentNode.removeChild(element)\n      display == \"none\" && (display = \"block\")\n      elementDisplay[nodeName] = display\n    }\n    return elementDisplay[nodeName]\n  }\n\n  function children(element) {\n    return 'children' in element ?\n      slice.call(element.children) :\n      $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\n  }\n\n  // `$.zepto.fragment` takes a html string and an optional tag name\n  // to generate DOM nodes nodes from the given html string.\n  // The generated DOM nodes are returned as an array.\n  // This function can be overriden in plugins for example to make\n  // it compatible with browsers that don't support the DOM fully.\n  zepto.fragment = function(html, name, properties) {\n    var dom, nodes, container\n\n    // A special case optimization for a single tag\n    if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))\n\n    if (!dom) {\n      if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\n      if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\n      if (!(name in containers)) name = '*'\n\n      container = containers[name]\n      container.innerHTML = '' + html\n      dom = $.each(slice.call(container.childNodes), function(){\n        container.removeChild(this)\n      })\n    }\n\n    if (isPlainObject(properties)) {\n      nodes = $(dom)\n      $.each(properties, function(key, value) {\n        if (methodAttributes.indexOf(key) > -1) nodes[key](value)\n        else nodes.attr(key, value)\n      })\n    }\n\n    return dom\n  }\n\n  // `$.zepto.Z` swaps out the prototype of the given `dom` array\n  // of nodes with `$.fn` and thus supplying all the Zepto functions\n  // to the array. Note that `__proto__` is not supported on Internet\n  // Explorer. This method can be overriden in plugins.\n  zepto.Z = function(dom, selector) {\n    dom = dom || []\n    dom.__proto__ = $.fn\n    dom.selector = selector || ''\n    return dom\n  }\n\n  // `$.zepto.isZ` should return `true` if the given object is a Zepto\n  // collection. This method can be overriden in plugins.\n  zepto.isZ = function(object) {\n    return object instanceof zepto.Z\n  }\n\n  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\n  // takes a CSS selector and an optional context (and handles various\n  // special cases).\n  // This method can be overriden in plugins.\n  zepto.init = function(selector, context) {\n    var dom\n    // If nothing given, return an empty Zepto collection\n    if (!selector) return zepto.Z()\n    // Optimize for string selectors\n    else if (typeof selector == 'string') {\n      selector = selector.trim()\n      // If it's a html fragment, create nodes from it\n      // Note: In both Chrome 21 and Firefox 15, DOM error 12\n      // is thrown if the fragment doesn't begin with <\n      if (selector[0] == '<' && fragmentRE.test(selector))\n        dom = zepto.fragment(selector, RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // If it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // If a function is given, call it when the DOM is ready\n    else if (isFunction(selector)) return $(document).ready(selector)\n    // If a Zepto collection is given, just return it\n    else if (zepto.isZ(selector)) return selector\n    else {\n      // normalize array if an array of nodes is given\n      if (isArray(selector)) dom = compact(selector)\n      // Wrap DOM nodes.\n      else if (isObject(selector))\n        dom = [selector], selector = null\n      // If it's a html fragment, create nodes from it\n      else if (fragmentRE.test(selector))\n        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\n      // If there's a context, create a collection on that context first, and select\n      // nodes from there\n      else if (context !== undefined) return $(context).find(selector)\n      // And last but no least, if it's a CSS selector, use it to select nodes.\n      else dom = zepto.qsa(document, selector)\n    }\n    // create a new Zepto collection from the nodes found\n    return zepto.Z(dom, selector)\n  }\n\n  // `$` will be the base `Zepto` object. When calling this\n  // function just call `$.zepto.init, which makes the implementation\n  // details of selecting nodes and creating Zepto collections\n  // patchable in plugins.\n  $ = function(selector, context){\n    return zepto.init(selector, context)\n  }\n\n  function extend(target, source, deep) {\n    for (key in source)\n      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n        if (isPlainObject(source[key]) && !isPlainObject(target[key]))\n          target[key] = {}\n        if (isArray(source[key]) && !isArray(target[key]))\n          target[key] = []\n        extend(target[key], source[key], deep)\n      }\n      else if (source[key] !== undefined) target[key] = source[key]\n  }\n\n  // Copy all but undefined properties from one or more\n  // objects to the `target` object.\n  $.extend = function(target){\n    var deep, args = slice.call(arguments, 1)\n    if (typeof target == 'boolean') {\n      deep = target\n      target = args.shift()\n    }\n    args.forEach(function(arg){ extend(target, arg, deep) })\n    return target\n  }\n\n  // `$.zepto.qsa` is Zepto's CSS selector implementation which\n  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\n  // This method can be overriden in plugins.\n  zepto.qsa = function(element, selector){\n    var found,\n        maybeID = selector[0] == '#',\n        maybeClass = !maybeID && selector[0] == '.',\n        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked\n        isSimple = simpleSelectorRE.test(nameOnly)\n    return (isDocument(element) && isSimple && maybeID) ?\n      ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :\n      (element.nodeType !== 1 && element.nodeType !== 9) ? [] :\n      slice.call(\n        isSimple && !maybeID ?\n          maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class\n          element.getElementsByTagName(selector) : // Or a tag\n          element.querySelectorAll(selector) // Or it's not simple, and we need to query all\n      )\n  }\n\n  function filtered(nodes, selector) {\n    return selector == null ? $(nodes) : $(nodes).filter(selector)\n  }\n\n  $.contains = document.documentElement.contains ?\n    function(parent, node) {\n      return parent !== node && parent.contains(node)\n    } :\n    function(parent, node) {\n      while (node && (node = node.parentNode))\n        if (node === parent) return true\n      return false\n    }\n\n  function funcArg(context, arg, idx, payload) {\n    return isFunction(arg) ? arg.call(context, idx, payload) : arg\n  }\n\n  function setAttribute(node, name, value) {\n    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\n  }\n\n  // access className property while respecting SVGAnimatedString\n  function className(node, value){\n    var klass = node.className || '',\n        svg   = klass && klass.baseVal !== undefined\n\n    if (value === undefined) return svg ? klass.baseVal : klass\n    svg ? (klass.baseVal = value) : (node.className = value)\n  }\n\n  // \"true\"  => true\n  // \"false\" => false\n  // \"null\"  => null\n  // \"42\"    => 42\n  // \"42.5\"  => 42.5\n  // \"08\"    => \"08\"\n  // JSON    => parse if valid\n  // String  => self\n  function deserializeValue(value) {\n    try {\n      return value ?\n        value == \"true\" ||\n        ( value == \"false\" ? false :\n          value == \"null\" ? null :\n          +value + \"\" == value ? +value :\n          /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\n          value )\n        : value\n    } catch(e) {\n      return value\n    }\n  }\n\n  $.type = type\n  $.isFunction = isFunction\n  $.isWindow = isWindow\n  $.isArray = isArray\n  $.isPlainObject = isPlainObject\n\n  $.isEmptyObject = function(obj) {\n    var name\n    for (name in obj) return false\n    return true\n  }\n\n  $.inArray = function(elem, array, i){\n    return emptyArray.indexOf.call(array, elem, i)\n  }\n\n  $.camelCase = camelize\n  $.trim = function(str) {\n    return str == null ? \"\" : String.prototype.trim.call(str)\n  }\n\n  // plugin compatibility\n  $.uuid = 0\n  $.support = { }\n  $.expr = { }\n\n  $.map = function(elements, callback){\n    var value, values = [], i, key\n    if (likeArray(elements))\n      for (i = 0; i < elements.length; i++) {\n        value = callback(elements[i], i)\n        if (value != null) values.push(value)\n      }\n    else\n      for (key in elements) {\n        value = callback(elements[key], key)\n        if (value != null) values.push(value)\n      }\n    return flatten(values)\n  }\n\n  $.each = function(elements, callback){\n    var i, key\n    if (likeArray(elements)) {\n      for (i = 0; i < elements.length; i++)\n        if (callback.call(elements[i], i, elements[i]) === false) return elements\n    } else {\n      for (key in elements)\n        if (callback.call(elements[key], key, elements[key]) === false) return elements\n    }\n\n    return elements\n  }\n\n  $.grep = function(elements, callback){\n    return filter.call(elements, callback)\n  }\n\n  if (window.JSON) $.parseJSON = JSON.parse\n\n  // Populate the class2type map\n  $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n    class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\n  })\n\n  // Define methods that will be available on all\n  // Zepto collections\n  $.fn = {\n    // Because a collection acts like an array\n    // copy over these useful array functions.\n    forEach: emptyArray.forEach,\n    reduce: emptyArray.reduce,\n    push: emptyArray.push,\n    sort: emptyArray.sort,\n    indexOf: emptyArray.indexOf,\n    concat: emptyArray.concat,\n\n    // `map` and `slice` in the jQuery API work differently\n    // from their array counterparts\n    map: function(fn){\n      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\n    },\n    slice: function(){\n      return $(slice.apply(this, arguments))\n    },\n\n    ready: function(callback){\n      // need to check if document.body exists for IE as that browser reports\n      // document ready when it hasn't yet created the body element\n      if (readyRE.test(document.readyState) && document.body) callback($)\n      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\n      return this\n    },\n    get: function(idx){\n      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n    },\n    toArray: function(){ return this.get() },\n    size: function(){\n      return this.length\n    },\n    remove: function(){\n      return this.each(function(){\n        if (this.parentNode != null)\n          this.parentNode.removeChild(this)\n      })\n    },\n    each: function(callback){\n      emptyArray.every.call(this, function(el, idx){\n        return callback.call(el, idx, el) !== false\n      })\n      return this\n    },\n    filter: function(selector){\n      if (isFunction(selector)) return this.not(this.not(selector))\n      return $(filter.call(this, function(element){\n        return zepto.matches(element, selector)\n      }))\n    },\n    add: function(selector,context){\n      return $(uniq(this.concat($(selector,context))))\n    },\n    is: function(selector){\n      return this.length > 0 && zepto.matches(this[0], selector)\n    },\n    not: function(selector){\n      var nodes=[]\n      if (isFunction(selector) && selector.call !== undefined)\n        this.each(function(idx){\n          if (!selector.call(this,idx)) nodes.push(this)\n        })\n      else {\n        var excludes = typeof selector == 'string' ? this.filter(selector) :\n          (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n        this.forEach(function(el){\n          if (excludes.indexOf(el) < 0) nodes.push(el)\n        })\n      }\n      return $(nodes)\n    },\n    has: function(selector){\n      return this.filter(function(){\n        return isObject(selector) ?\n          $.contains(this, selector) :\n          $(this).find(selector).size()\n      })\n    },\n    eq: function(idx){\n      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\n    },\n    first: function(){\n      var el = this[0]\n      return el && !isObject(el) ? el : $(el)\n    },\n    last: function(){\n      var el = this[this.length - 1]\n      return el && !isObject(el) ? el : $(el)\n    },\n    find: function(selector){\n      var result, $this = this\n      if (!selector) result = $()\n      else if (typeof selector == 'object')\n        result = $(selector).filter(function(){\n          var node = this\n          return emptyArray.some.call($this, function(parent){\n            return $.contains(parent, node)\n          })\n        })\n      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\n      else result = this.map(function(){ return zepto.qsa(this, selector) })\n      return result\n    },\n    closest: function(selector, context){\n      var node = this[0], collection = false\n      if (typeof selector == 'object') collection = $(selector)\n      while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\n        node = node !== context && !isDocument(node) && node.parentNode\n      return $(node)\n    },\n    parents: function(selector){\n      var ancestors = [], nodes = this\n      while (nodes.length > 0)\n        nodes = $.map(nodes, function(node){\n          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n            ancestors.push(node)\n            return node\n          }\n        })\n      return filtered(ancestors, selector)\n    },\n    parent: function(selector){\n      return filtered(uniq(this.pluck('parentNode')), selector)\n    },\n    children: function(selector){\n      return filtered(this.map(function(){ return children(this) }), selector)\n    },\n    contents: function() {\n      return this.map(function() { return slice.call(this.childNodes) })\n    },\n    siblings: function(selector){\n      return filtered(this.map(function(i, el){\n        return filter.call(children(el.parentNode), function(child){ return child!==el })\n      }), selector)\n    },\n    empty: function(){\n      return this.each(function(){ this.innerHTML = '' })\n    },\n    // `pluck` is borrowed from Prototype.js\n    pluck: function(property){\n      return $.map(this, function(el){ return el[property] })\n    },\n    show: function(){\n      return this.each(function(){\n        this.style.display == \"none\" && (this.style.display = '')\n        if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\n          this.style.display = defaultDisplay(this.nodeName)\n      })\n    },\n    replaceWith: function(newContent){\n      return this.before(newContent).remove()\n    },\n    wrap: function(structure){\n      var func = isFunction(structure)\n      if (this[0] && !func)\n        var dom   = $(structure).get(0),\n            clone = dom.parentNode || this.length > 1\n\n      return this.each(function(index){\n        $(this).wrapAll(\n          func ? structure.call(this, index) :\n            clone ? dom.cloneNode(true) : dom\n        )\n      })\n    },\n    wrapAll: function(structure){\n      if (this[0]) {\n        $(this[0]).before(structure = $(structure))\n        var children\n        // drill down to the inmost element\n        while ((children = structure.children()).length) structure = children.first()\n        $(structure).append(this)\n      }\n      return this\n    },\n    wrapInner: function(structure){\n      var func = isFunction(structure)\n      return this.each(function(index){\n        var self = $(this), contents = self.contents(),\n            dom  = func ? structure.call(this, index) : structure\n        contents.length ? contents.wrapAll(dom) : self.append(dom)\n      })\n    },\n    unwrap: function(){\n      this.parent().each(function(){\n        $(this).replaceWith($(this).children())\n      })\n      return this\n    },\n    clone: function(){\n      return this.map(function(){ return this.cloneNode(true) })\n    },\n    hide: function(){\n      return this.css(\"display\", \"none\")\n    },\n    toggle: function(setting){\n      return this.each(function(){\n        var el = $(this)\n        ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n      })\n    },\n    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\n    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\n    html: function(html){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var originHtml = this.innerHTML\n          $(this).empty().append( funcArg(this, html, idx, originHtml) )\n        }) :\n        (0 in this ? this[0].innerHTML : null)\n    },\n    text: function(text){\n      return 0 in arguments ?\n        this.each(function(idx){\n          var newText = funcArg(this, text, idx, this.textContent)\n          this.textContent = newText == null ? '' : ''+newText\n        }) :\n        (0 in this ? this[0].textContent : null)\n    },\n    attr: function(name, value){\n      var result\n      return (typeof name == 'string' && !(1 in arguments)) ?\n        (!this.length || this[0].nodeType !== 1 ? undefined :\n          (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result\n        ) :\n        this.each(function(idx){\n          if (this.nodeType !== 1) return\n          if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\n          else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\n        })\n    },\n    removeAttr: function(name){\n      return this.each(function(){ this.nodeType === 1 && name.split(' ').forEach(function(attribute){\n        setAttribute(this, attribute)\n      }, this)})\n    },\n    prop: function(name, value){\n      name = propMap[name] || name\n      return (1 in arguments) ?\n        this.each(function(idx){\n          this[name] = funcArg(this, value, idx, this[name])\n        }) :\n        (this[0] && this[0][name])\n    },\n    data: function(name, value){\n      var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase()\n\n      var data = (1 in arguments) ?\n        this.attr(attrName, value) :\n        this.attr(attrName)\n\n      return data !== null ? deserializeValue(data) : undefined\n    },\n    val: function(value){\n      return 0 in arguments ?\n        this.each(function(idx){\n          this.value = funcArg(this, value, idx, this.value)\n        }) :\n        (this[0] && (this[0].multiple ?\n           $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :\n           this[0].value)\n        )\n    },\n    offset: function(coordinates){\n      if (coordinates) return this.each(function(index){\n        var $this = $(this),\n            coords = funcArg(this, coordinates, index, $this.offset()),\n            parentOffset = $this.offsetParent().offset(),\n            props = {\n              top:  coords.top  - parentOffset.top,\n              left: coords.left - parentOffset.left\n            }\n\n        if ($this.css('position') == 'static') props['position'] = 'relative'\n        $this.css(props)\n      })\n      if (!this.length) return null\n      var obj = this[0].getBoundingClientRect()\n      return {\n        left: obj.left + window.pageXOffset,\n        top: obj.top + window.pageYOffset,\n        width: Math.round(obj.width),\n        height: Math.round(obj.height)\n      }\n    },\n    css: function(property, value){\n      if (arguments.length < 2) {\n        var computedStyle, element = this[0]\n        if(!element) return\n        computedStyle = getComputedStyle(element, '')\n        if (typeof property == 'string')\n          return element.style[camelize(property)] || computedStyle.getPropertyValue(property)\n        else if (isArray(property)) {\n          var props = {}\n          $.each(property, function(_, prop){\n            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))\n          })\n          return props\n        }\n      }\n\n      var css = ''\n      if (type(property) == 'string') {\n        if (!value && value !== 0)\n          this.each(function(){ this.style.removeProperty(dasherize(property)) })\n        else\n          css = dasherize(property) + \":\" + maybeAddPx(property, value)\n      } else {\n        for (key in property)\n          if (!property[key] && property[key] !== 0)\n            this.each(function(){ this.style.removeProperty(dasherize(key)) })\n          else\n            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n      }\n\n      return this.each(function(){ this.style.cssText += ';' + css })\n    },\n    index: function(element){\n      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\n    },\n    hasClass: function(name){\n      if (!name) return false\n      return emptyArray.some.call(this, function(el){\n        return this.test(className(el))\n      }, classRE(name))\n    },\n    addClass: function(name){\n      if (!name) return this\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        classList = []\n        var cls = className(this), newName = funcArg(this, name, idx, cls)\n        newName.split(/\\s+/g).forEach(function(klass){\n          if (!$(this).hasClass(klass)) classList.push(klass)\n        }, this)\n        classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\n      })\n    },\n    removeClass: function(name){\n      return this.each(function(idx){\n        if (!('className' in this)) return\n        if (name === undefined) return className(this, '')\n        classList = className(this)\n        funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\n          classList = classList.replace(classRE(klass), \" \")\n        })\n        className(this, classList.trim())\n      })\n    },\n    toggleClass: function(name, when){\n      if (!name) return this\n      return this.each(function(idx){\n        var $this = $(this), names = funcArg(this, name, idx, className(this))\n        names.split(/\\s+/g).forEach(function(klass){\n          (when === undefined ? !$this.hasClass(klass) : when) ?\n            $this.addClass(klass) : $this.removeClass(klass)\n        })\n      })\n    },\n    scrollTop: function(value){\n      if (!this.length) return\n      var hasScrollTop = 'scrollTop' in this[0]\n      if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset\n      return this.each(hasScrollTop ?\n        function(){ this.scrollTop = value } :\n        function(){ this.scrollTo(this.scrollX, value) })\n    },\n    scrollLeft: function(value){\n      if (!this.length) return\n      var hasScrollLeft = 'scrollLeft' in this[0]\n      if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset\n      return this.each(hasScrollLeft ?\n        function(){ this.scrollLeft = value } :\n        function(){ this.scrollTo(value, this.scrollY) })\n    },\n    position: function() {\n      if (!this.length) return\n\n      var elem = this[0],\n        // Get *real* offsetParent\n        offsetParent = this.offsetParent(),\n        // Get correct offsets\n        offset       = this.offset(),\n        parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\n\n      // Subtract element margins\n      // note: when an element has margin: auto the offsetLeft and marginLeft\n      // are the same in Safari causing offset.left to incorrectly be 0\n      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\n      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\n\n      // Add offsetParent borders\n      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\n      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\n\n      // Subtract the two offsets\n      return {\n        top:  offset.top  - parentOffset.top,\n        left: offset.left - parentOffset.left\n      }\n    },\n    offsetParent: function() {\n      return this.map(function(){\n        var parent = this.offsetParent || document.body\n        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\n          parent = parent.offsetParent\n        return parent\n      })\n    }\n  }\n\n  // for now\n  $.fn.detach = $.fn.remove\n\n  // Generate the `width` and `height` functions\n  ;['width', 'height'].forEach(function(dimension){\n    var dimensionProperty =\n      dimension.replace(/./, function(m){ return m[0].toUpperCase() })\n\n    $.fn[dimension] = function(value){\n      var offset, el = this[0]\n      if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :\n        isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :\n        (offset = this.offset()) && offset[dimension]\n      else return this.each(function(idx){\n        el = $(this)\n        el.css(dimension, funcArg(this, value, idx, el[dimension]()))\n      })\n    }\n  })\n\n  function traverseNode(node, fun) {\n    fun(node)\n    for (var i = 0, len = node.childNodes.length; i < len; i++)\n      traverseNode(node.childNodes[i], fun)\n  }\n\n  // Generate the `after`, `prepend`, `before`, `append`,\n  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\n  adjacencyOperators.forEach(function(operator, operatorIndex) {\n    var inside = operatorIndex % 2 //=> prepend, append\n\n    $.fn[operator] = function(){\n      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\n      var argType, nodes = $.map(arguments, function(arg) {\n            argType = type(arg)\n            return argType == \"object\" || argType == \"array\" || arg == null ?\n              arg : zepto.fragment(arg)\n          }),\n          parent, copyByClone = this.length > 1\n      if (nodes.length < 1) return this\n\n      return this.each(function(_, target){\n        parent = inside ? target : target.parentNode\n\n        // convert all methods to a \"before\" operation\n        target = operatorIndex == 0 ? target.nextSibling :\n                 operatorIndex == 1 ? target.firstChild :\n                 operatorIndex == 2 ? target :\n                 null\n\n        var parentInDocument = $.contains(document.documentElement, parent)\n\n        nodes.forEach(function(node){\n          if (copyByClone) node = node.cloneNode(true)\n          else if (!parent) return $(node).remove()\n\n          parent.insertBefore(node, target)\n          if (parentInDocument) traverseNode(node, function(el){\n            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\n               (!el.type || el.type === 'text/javascript') && !el.src)\n              window['eval'].call(window, el.innerHTML)\n          })\n        })\n      })\n    }\n\n    // after    => insertAfter\n    // prepend  => prependTo\n    // before   => insertBefore\n    // append   => appendTo\n    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\n      $(html)[operator](this)\n      return this\n    }\n  })\n\n  zepto.Z.prototype = $.fn\n\n  // Export internal API functions in the `$.zepto` namespace\n  zepto.uniq = uniq\n  zepto.deserializeValue = deserializeValue\n  $.zepto = zepto\n\n  return $\n})()\n\nwindow.Zepto = Zepto\nwindow.$ === undefined && (window.$ = Zepto)\n\n;(function($){\n  var _zid = 1, undefined,\n      slice = Array.prototype.slice,\n      isFunction = $.isFunction,\n      isString = function(obj){ return typeof obj == 'string' },\n      handlers = {},\n      specialEvents={},\n      focusinSupported = 'onfocusin' in window,\n      focus = { focus: 'focusin', blur: 'focusout' },\n      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\n\n  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\n\n  function zid(element) {\n    return element._zid || (element._zid = _zid++)\n  }\n  function findHandlers(element, event, fn, selector) {\n    event = parse(event)\n    if (event.ns) var matcher = matcherFor(event.ns)\n    return (handlers[zid(element)] || []).filter(function(handler) {\n      return handler\n        && (!event.e  || handler.e == event.e)\n        && (!event.ns || matcher.test(handler.ns))\n        && (!fn       || zid(handler.fn) === zid(fn))\n        && (!selector || handler.sel == selector)\n    })\n  }\n  function parse(event) {\n    var parts = ('' + event).split('.')\n    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\n  }\n  function matcherFor(ns) {\n    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\n  }\n\n  function eventCapture(handler, captureSetting) {\n    return handler.del &&\n      (!focusinSupported && (handler.e in focus)) ||\n      !!captureSetting\n  }\n\n  function realEvent(type) {\n    return hover[type] || (focusinSupported && focus[type]) || type\n  }\n\n  function add(element, events, fn, data, selector, delegator, capture){\n    var id = zid(element), set = (handlers[id] || (handlers[id] = []))\n    events.split(/\\s/).forEach(function(event){\n      if (event == 'ready') return $(document).ready(fn)\n      var handler   = parse(event)\n      handler.fn    = fn\n      handler.sel   = selector\n      // emulate mouseenter, mouseleave\n      if (handler.e in hover) fn = function(e){\n        var related = e.relatedTarget\n        if (!related || (related !== this && !$.contains(this, related)))\n          return handler.fn.apply(this, arguments)\n      }\n      handler.del   = delegator\n      var callback  = delegator || fn\n      handler.proxy = function(e){\n        e = compatible(e)\n        if (e.isImmediatePropagationStopped()) return\n        e.data = data\n        var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))\n        if (result === false) e.preventDefault(), e.stopPropagation()\n        return result\n      }\n      handler.i = set.length\n      set.push(handler)\n      if ('addEventListener' in element)\n        element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n    })\n  }\n  function remove(element, events, fn, selector, capture){\n    var id = zid(element)\n    ;(events || '').split(/\\s/).forEach(function(event){\n      findHandlers(element, event, fn, selector).forEach(function(handler){\n        delete handlers[id][handler.i]\n      if ('removeEventListener' in element)\n        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n      })\n    })\n  }\n\n  $.event = { add: add, remove: remove }\n\n  $.proxy = function(fn, context) {\n    var args = (2 in arguments) && slice.call(arguments, 2)\n    if (isFunction(fn)) {\n      var proxyFn = function(){ return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments) }\n      proxyFn._zid = zid(fn)\n      return proxyFn\n    } else if (isString(context)) {\n      if (args) {\n        args.unshift(fn[context], fn)\n        return $.proxy.apply(null, args)\n      } else {\n        return $.proxy(fn[context], fn)\n      }\n    } else {\n      throw new TypeError(\"expected function\")\n    }\n  }\n\n  $.fn.bind = function(event, data, callback){\n    return this.on(event, data, callback)\n  }\n  $.fn.unbind = function(event, callback){\n    return this.off(event, callback)\n  }\n  $.fn.one = function(event, selector, data, callback){\n    return this.on(event, selector, data, callback, 1)\n  }\n\n  var returnTrue = function(){return true},\n      returnFalse = function(){return false},\n      ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\n      eventMethods = {\n        preventDefault: 'isDefaultPrevented',\n        stopImmediatePropagation: 'isImmediatePropagationStopped',\n        stopPropagation: 'isPropagationStopped'\n      }\n\n  function compatible(event, source) {\n    if (source || !event.isDefaultPrevented) {\n      source || (source = event)\n\n      $.each(eventMethods, function(name, predicate) {\n        var sourceMethod = source[name]\n        event[name] = function(){\n          this[predicate] = returnTrue\n          return sourceMethod && sourceMethod.apply(source, arguments)\n        }\n        event[predicate] = returnFalse\n      })\n\n      if (source.defaultPrevented !== undefined ? source.defaultPrevented :\n          'returnValue' in source ? source.returnValue === false :\n          source.getPreventDefault && source.getPreventDefault())\n        event.isDefaultPrevented = returnTrue\n    }\n    return event\n  }\n\n  function createProxy(event) {\n    var key, proxy = { originalEvent: event }\n    for (key in event)\n      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\n\n    return compatible(proxy, event)\n  }\n\n  $.fn.delegate = function(selector, event, callback){\n    return this.on(event, selector, callback)\n  }\n  $.fn.undelegate = function(selector, event, callback){\n    return this.off(event, selector, callback)\n  }\n\n  $.fn.live = function(event, callback){\n    $(document.body).delegate(this.selector, event, callback)\n    return this\n  }\n  $.fn.die = function(event, callback){\n    $(document.body).undelegate(this.selector, event, callback)\n    return this\n  }\n\n  $.fn.on = function(event, selector, data, callback, one){\n    var autoRemove, delegator, $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.on(type, selector, data, fn, one)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = data, data = selector, selector = undefined\n    if (isFunction(data) || data === false)\n      callback = data, data = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(_, element){\n      if (one) autoRemove = function(e){\n        remove(element, e.type, callback)\n        return callback.apply(this, arguments)\n      }\n\n      if (selector) delegator = function(e){\n        var evt, match = $(e.target).closest(selector, element).get(0)\n        if (match && match !== element) {\n          evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\n          return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))\n        }\n      }\n\n      add(element, event, callback, data, selector, delegator || autoRemove)\n    })\n  }\n  $.fn.off = function(event, selector, callback){\n    var $this = this\n    if (event && !isString(event)) {\n      $.each(event, function(type, fn){\n        $this.off(type, selector, fn)\n      })\n      return $this\n    }\n\n    if (!isString(selector) && !isFunction(callback) && callback !== false)\n      callback = selector, selector = undefined\n\n    if (callback === false) callback = returnFalse\n\n    return $this.each(function(){\n      remove(this, event, callback, selector)\n    })\n  }\n\n  $.fn.trigger = function(event, args){\n    event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)\n    event._args = args\n    return this.each(function(){\n      // handle focus(), blur() by calling them directly\n      if (event.type in focus && typeof this[event.type] == \"function\") this[event.type]()\n      // items in the collection might not be DOM elements\n      else if ('dispatchEvent' in this) this.dispatchEvent(event)\n      else $(this).triggerHandler(event, args)\n    })\n  }\n\n  // triggers event handlers on current element just as if an event occurred,\n  // doesn't trigger an actual event, doesn't bubble\n  $.fn.triggerHandler = function(event, args){\n    var e, result\n    this.each(function(i, element){\n      e = createProxy(isString(event) ? $.Event(event) : event)\n      e._args = args\n      e.target = element\n      $.each(findHandlers(element, event.type || event), function(i, handler){\n        result = handler.proxy(e)\n        if (e.isImmediatePropagationStopped()) return false\n      })\n    })\n    return result\n  }\n\n  // shortcut methods for `.bind(event, fn)` for each event type\n  ;('focusin focusout focus blur load resize scroll unload click dblclick '+\n  'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\n  'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n    $.fn[event] = function(callback) {\n      return (0 in arguments) ?\n        this.bind(event, callback) :\n        this.trigger(event)\n    }\n  })\n\n  $.Event = function(type, props) {\n    if (!isString(type)) props = type, type = props.type\n    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\n    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\n    event.initEvent(type, bubbles, true)\n    return compatible(event)\n  }\n\n})(Zepto)\n\n;(function($){\n  var jsonpID = 0,\n      document = window.document,\n      key,\n      name,\n      rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n      scriptTypeRE = /^(?:text|application)\\/javascript/i,\n      xmlTypeRE = /^(?:text|application)\\/xml/i,\n      jsonType = 'application/json',\n      htmlType = 'text/html',\n      blankRE = /^\\s*$/,\n      originAnchor = document.createElement('a')\n\n  originAnchor.href = window.location.href\n\n  // trigger a custom event and return false if it was cancelled\n  function triggerAndReturn(context, eventName, data) {\n    var event = $.Event(eventName)\n    $(context).trigger(event, data)\n    return !event.isDefaultPrevented()\n  }\n\n  // trigger an Ajax \"global\" event\n  function triggerGlobal(settings, context, eventName, data) {\n    if (settings.global) return triggerAndReturn(context || document, eventName, data)\n  }\n\n  // Number of active Ajax requests\n  $.active = 0\n\n  function ajaxStart(settings) {\n    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n  }\n  function ajaxStop(settings) {\n    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n  }\n\n  // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n  function ajaxBeforeSend(xhr, settings) {\n    var context = settings.context\n    if (settings.beforeSend.call(context, xhr, settings) === false ||\n        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n      return false\n\n    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n  }\n  function ajaxSuccess(data, xhr, settings, deferred) {\n    var context = settings.context, status = 'success'\n    settings.success.call(context, data, status, xhr)\n    if (deferred) deferred.resolveWith(context, [data, status, xhr])\n    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n    ajaxComplete(status, xhr, settings)\n  }\n  // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n  function ajaxError(error, type, xhr, settings, deferred) {\n    var context = settings.context\n    settings.error.call(context, xhr, type, error)\n    if (deferred) deferred.rejectWith(context, [xhr, type, error])\n    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n    ajaxComplete(type, xhr, settings)\n  }\n  // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n  function ajaxComplete(status, xhr, settings) {\n    var context = settings.context\n    settings.complete.call(context, xhr, status)\n    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n    ajaxStop(settings)\n  }\n\n  // Empty function, used as default callback\n  function empty() {}\n\n  $.ajaxJSONP = function(options, deferred){\n    if (!('type' in options)) return $.ajax(options)\n\n    var _callbackName = options.jsonpCallback,\n      callbackName = ($.isFunction(_callbackName) ?\n        _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\n      script = document.createElement('script'),\n      originalCallback = window[callbackName],\n      responseData,\n      abort = function(errorType) {\n        $(script).triggerHandler('error', errorType || 'abort')\n      },\n      xhr = { abort: abort }, abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    $(script).on('load error', function(e, errorType){\n      clearTimeout(abortTimeout)\n      $(script).off().remove()\n\n      if (e.type == 'error' || !responseData) {\n        ajaxError(null, errorType || 'error', xhr, options, deferred)\n      } else {\n        ajaxSuccess(responseData[0], xhr, options, deferred)\n      }\n\n      window[callbackName] = originalCallback\n      if (responseData && $.isFunction(originalCallback))\n        originalCallback(responseData[0])\n\n      originalCallback = responseData = undefined\n    })\n\n    if (ajaxBeforeSend(xhr, options) === false) {\n      abort('abort')\n      return xhr\n    }\n\n    window[callbackName] = function(){\n      responseData = arguments\n    }\n\n    script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\n    document.head.appendChild(script)\n\n    if (options.timeout > 0) abortTimeout = setTimeout(function(){\n      abort('timeout')\n    }, options.timeout)\n\n    return xhr\n  }\n\n  $.ajaxSettings = {\n    // Default type of request\n    type: 'GET',\n    // Callback that is executed before request\n    beforeSend: empty,\n    // Callback that is executed if the request succeeds\n    success: empty,\n    // Callback that is executed the the server drops error\n    error: empty,\n    // Callback that is executed on request complete (both: error and success)\n    complete: empty,\n    // The context for the callbacks\n    context: null,\n    // Whether to trigger \"global\" Ajax events\n    global: true,\n    // Transport\n    xhr: function () {\n      return new window.XMLHttpRequest()\n    },\n    // MIME types mapping\n    // IIS returns Javascript as \"application/x-javascript\"\n    accepts: {\n      script: 'text/javascript, application/javascript, application/x-javascript',\n      json:   jsonType,\n      xml:    'application/xml, text/xml',\n      html:   htmlType,\n      text:   'text/plain'\n    },\n    // Whether the request is to another domain\n    crossDomain: false,\n    // Default timeout\n    timeout: 0,\n    // Whether data should be serialized to string\n    processData: true,\n    // Whether the browser should be allowed to cache GET responses\n    cache: true\n  }\n\n  function mimeToDataType(mime) {\n    if (mime) mime = mime.split(';', 2)[0]\n    return mime && ( mime == htmlType ? 'html' :\n      mime == jsonType ? 'json' :\n      scriptTypeRE.test(mime) ? 'script' :\n      xmlTypeRE.test(mime) && 'xml' ) || 'text'\n  }\n\n  function appendQuery(url, query) {\n    if (query == '') return url\n    return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n  }\n\n  // serialize payload and append it to the URL for GET requests\n  function serializeData(options) {\n    if (options.processData && options.data && $.type(options.data) != \"string\")\n      options.data = $.param(options.data, options.traditional)\n    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\n      options.url = appendQuery(options.url, options.data), options.data = undefined\n  }\n\n  $.ajax = function(options){\n    var settings = $.extend({}, options || {}),\n        deferred = $.Deferred && $.Deferred(),\n        urlAnchor\n    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n    ajaxStart(settings)\n\n    if (!settings.crossDomain) {\n      urlAnchor = document.createElement('a')\n      urlAnchor.href = settings.url\n      urlAnchor.href = urlAnchor.href\n      settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\n    }\n\n    if (!settings.url) settings.url = window.location.toString()\n    serializeData(settings)\n\n    var dataType = settings.dataType, hasPlaceholder = /\\?.+=\\?/.test(settings.url)\n    if (hasPlaceholder) dataType = 'jsonp'\n\n    if (settings.cache === false || (\n         (!options || options.cache !== true) &&\n         ('script' == dataType || 'jsonp' == dataType)\n        ))\n      settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n    if ('jsonp' == dataType) {\n      if (!hasPlaceholder)\n        settings.url = appendQuery(settings.url,\n          settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\n      return $.ajaxJSONP(settings, deferred)\n    }\n\n    var mime = settings.accepts[dataType],\n        headers = { },\n        setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n        protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n        xhr = settings.xhr(),\n        nativeSetHeader = xhr.setRequestHeader,\n        abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\n    setHeader('Accept', mime || '*/*')\n    if (mime = settings.mimeType || mime) {\n      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n      xhr.overrideMimeType && xhr.overrideMimeType(mime)\n    }\n    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n      setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n\n    if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])\n    xhr.setRequestHeader = setHeader\n\n    xhr.onreadystatechange = function(){\n      if (xhr.readyState == 4) {\n        xhr.onreadystatechange = empty\n        clearTimeout(abortTimeout)\n        var result, error = false\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n          dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n          result = xhr.responseText\n\n          try {\n            // http://perfectionkills.com/global-eval-what-are-the-options/\n            if (dataType == 'script')    (1,eval)(result)\n            else if (dataType == 'xml')  result = xhr.responseXML\n            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n          } catch (e) { error = e }\n\n          if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\n          else ajaxSuccess(result, xhr, settings, deferred)\n        } else {\n          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\n        }\n      }\n    }\n\n    if (ajaxBeforeSend(xhr, settings) === false) {\n      xhr.abort()\n      ajaxError(null, 'abort', xhr, settings, deferred)\n      return xhr\n    }\n\n    if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n\n    var async = 'async' in settings ? settings.async : true\n    xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n    for (name in headers) nativeSetHeader.apply(xhr, headers[name])\n\n    if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n        xhr.onreadystatechange = empty\n        xhr.abort()\n        ajaxError(null, 'timeout', xhr, settings, deferred)\n      }, settings.timeout)\n\n    // avoid sending empty string (#319)\n    xhr.send(settings.data ? settings.data : null)\n    return xhr\n  }\n\n  // handle optional data/success arguments\n  function parseArguments(url, data, success, dataType) {\n    if ($.isFunction(data)) dataType = success, success = data, data = undefined\n    if (!$.isFunction(success)) dataType = success, success = undefined\n    return {\n      url: url\n    , data: data\n    , success: success\n    , dataType: dataType\n    }\n  }\n\n  $.get = function(/* url, data, success, dataType */){\n    return $.ajax(parseArguments.apply(null, arguments))\n  }\n\n  $.post = function(/* url, data, success, dataType */){\n    var options = parseArguments.apply(null, arguments)\n    options.type = 'POST'\n    return $.ajax(options)\n  }\n\n  $.getJSON = function(/* url, data, success */){\n    var options = parseArguments.apply(null, arguments)\n    options.dataType = 'json'\n    return $.ajax(options)\n  }\n\n  $.fn.load = function(url, data, success){\n    if (!this.length) return this\n    var self = this, parts = url.split(/\\s/), selector,\n        options = parseArguments(url, data, success),\n        callback = options.success\n    if (parts.length > 1) options.url = parts[0], selector = parts[1]\n    options.success = function(response){\n      self.html(selector ?\n        $('<div>').html(response.replace(rscript, \"\")).find(selector)\n        : response)\n      callback && callback.apply(self, arguments)\n    }\n    $.ajax(options)\n    return this\n  }\n\n  var escape = encodeURIComponent\n\n  function serialize(params, obj, traditional, scope){\n    var type, array = $.isArray(obj), hash = $.isPlainObject(obj)\n    $.each(obj, function(key, value) {\n      type = $.type(value)\n      if (scope) key = traditional ? scope :\n        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\n      // handle data in serializeArray() format\n      if (!scope && array) params.add(value.name, value.value)\n      // recurse into nested objects\n      else if (type == \"array\" || (!traditional && type == \"object\"))\n        serialize(params, value, traditional, key)\n      else params.add(key, value)\n    })\n  }\n\n  $.param = function(obj, traditional){\n    var params = []\n    params.add = function(key, value) {\n      if ($.isFunction(value)) value = value()\n      if (value == null) value = \"\"\n      this.push(escape(key) + '=' + escape(value))\n    }\n    serialize(params, obj, traditional)\n    return params.join('&').replace(/%20/g, '+')\n  }\n})(Zepto)\n\n;(function($){\n  $.fn.serializeArray = function() {\n    var name, type, result = [],\n      add = function(value) {\n        if (value.forEach) return value.forEach(add)\n        result.push({ name: name, value: value })\n      }\n    if (this[0]) $.each(this[0].elements, function(_, field){\n      type = field.type, name = field.name\n      if (name && field.nodeName.toLowerCase() != 'fieldset' &&\n        !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\n        ((type != 'radio' && type != 'checkbox') || field.checked))\n          add($(field).val())\n    })\n    return result\n  }\n\n  $.fn.serialize = function(){\n    var result = []\n    this.serializeArray().forEach(function(elm){\n      result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\n    })\n    return result.join('&')\n  }\n\n  $.fn.submit = function(callback) {\n    if (0 in arguments) this.bind('submit', callback)\n    else if (this.length) {\n      var event = $.Event('submit')\n      this.eq(0).trigger(event)\n      if (!event.isDefaultPrevented()) this.get(0).submit()\n    }\n    return this\n  }\n\n})(Zepto);\n\n(function($){\n  // __proto__ doesn't exist on IE<11, so redefine\n  // the Z function to use object extension instead\n  if (!('__proto__' in {})) {\n    $.extend($.zepto, {\n      Z: function(dom, selector){\n        dom = dom || []\n        $.extend(dom, $.fn)\n        dom.selector = selector || ''\n        dom.__Z = true\n        return dom\n      },\n      // this is a kludge but works\n      isZ: function(object){\n        return $.type(object) === 'array' && '__Z' in object\n      }\n    })\n  }\n\n  // getComputedStyle shouldn't freak out when called\n  // without a valid element as argument\n  try {\n    getComputedStyle(undefined)\n  } catch(e) {\n    var nativeGetComputedStyle = getComputedStyle;\n    window.getComputedStyle = function(element){\n      try {\n        return nativeGetComputedStyle(element)\n      } catch(e) {\n        return null\n      }\n    }\n  }\n})(Zepto);\n","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","//     Backbone.js 1.2.3\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self == self && self) ||\n            (typeof global == 'object' && global.global == global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch(e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n        context: context,\n        ctx: obj,\n        listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo =  function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off =  function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening =  function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once =  function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce =  function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger =  function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.defaults({validate: true}, options));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    for (var i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.defaults({}, options, setOptions);\n      if (options.parse && !this._isModel(models)) models = this.parse(models, options);\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model;\n      for (var i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length != set.length || _.some(this.models, function(model, index) {\n          return model !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed.length ? removed : false;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n","/**\n * Backbone localStorage Adapter\n * Version 1.1.16\n *\n * https://github.com/jeromegn/Backbone.localStorage\n */\n(function (root, factory) {\n  if (typeof exports === 'object' && typeof require === 'function') {\n    module.exports = factory(require(\"backbone\"));\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"backbone\"], function(Backbone) {\n      // Use global variables if the locals are undefined.\n      return factory(Backbone || root.Backbone);\n    });\n  } else {\n    factory(Backbone);\n  }\n}(this, function(Backbone) {\n// A simple module to replace `Backbone.sync` with *localStorage*-based\n// persistence. Models are given GUIDS, and saved into a JSON object. Simple\n// as that.\n\n// Generate four random hex digits.\nfunction S4() {\n   return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n};\n\n// Generate a pseudo-GUID by concatenating random hexadecimal.\nfunction guid() {\n   return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n};\n\nfunction isObject(item) {\n  return item === Object(item);\n}\n\nfunction contains(array, item) {\n  var i = array.length;\n  while (i--) if (array[i] === item) return true;\n  return false;\n}\n\nfunction extend(obj, props) {\n  for (var key in props) obj[key] = props[key]\n  return obj;\n}\n\nfunction result(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return (typeof value === 'function') ? object[property]() : value;\n}\n\n// Our Store is represented by a single JS object in *localStorage*. Create it\n// with a meaningful name, like the name you'd give a table.\n// window.Store is deprectated, use Backbone.LocalStorage instead\nBackbone.LocalStorage = window.Store = function(name, serializer) {\n  if( !this.localStorage ) {\n    throw \"Backbone.localStorage: Environment does not support localStorage.\"\n  }\n  this.name = name;\n  this.serializer = serializer || {\n    serialize: function(item) {\n      return isObject(item) ? JSON.stringify(item) : item;\n    },\n    // fix for \"illegal access\" error on Android when JSON.parse is passed null\n    deserialize: function (data) {\n      return data && JSON.parse(data);\n    }\n  };\n  var store = this.localStorage().getItem(this.name);\n  this.records = (store && store.split(\",\")) || [];\n};\n\nextend(Backbone.LocalStorage.prototype, {\n\n  // Save the current state of the **Store** to *localStorage*.\n  save: function() {\n    this.localStorage().setItem(this.name, this.records.join(\",\"));\n  },\n\n  // Add a model, giving it a (hopefully)-unique GUID, if it doesn't already\n  // have an id of it's own.\n  create: function(model) {\n    if (!model.id && model.id !== 0) {\n      model.id = guid();\n      model.set(model.idAttribute, model.id);\n    }\n    this.localStorage().setItem(this._itemName(model.id), this.serializer.serialize(model));\n    this.records.push(model.id.toString());\n    this.save();\n    return this.find(model);\n  },\n\n  // Update a model by replacing its copy in `this.data`.\n  update: function(model) {\n    this.localStorage().setItem(this._itemName(model.id), this.serializer.serialize(model));\n    var modelId = model.id.toString();\n    if (!contains(this.records, modelId)) {\n      this.records.push(modelId);\n      this.save();\n    }\n    return this.find(model);\n  },\n\n  // Retrieve a model from `this.data` by id.\n  find: function(model) {\n    return this.serializer.deserialize(this.localStorage().getItem(this._itemName(model.id)));\n  },\n\n  // Return the array of all models currently in storage.\n  findAll: function() {\n    var result = [];\n    for (var i = 0, id, data; i < this.records.length; i++) {\n      id = this.records[i];\n      data = this.serializer.deserialize(this.localStorage().getItem(this._itemName(id)));\n      if (data != null) result.push(data);\n    }\n    return result;\n  },\n\n  // Delete a model from `this.data`, returning it.\n  destroy: function(model) {\n    this.localStorage().removeItem(this._itemName(model.id));\n    var modelId = model.id.toString();\n    for (var i = 0, id; i < this.records.length; i++) {\n      if (this.records[i] === modelId) {\n        this.records.splice(i, 1);\n      }\n    }\n    this.save();\n    return model;\n  },\n\n  localStorage: function() {\n    return localStorage;\n  },\n\n  // Clear localStorage for specific collection.\n  _clear: function() {\n    var local = this.localStorage(),\n      itemRe = new RegExp(\"^\" + this.name + \"-\");\n\n    // Remove id-tracking item (e.g., \"foo\").\n    local.removeItem(this.name);\n\n    // Match all data items (e.g., \"foo-ID\") and remove.\n    for (var k in local) {\n      if (itemRe.test(k)) {\n        local.removeItem(k);\n      }\n    }\n\n    this.records.length = 0;\n  },\n\n  // Size of localStorage.\n  _storageSize: function() {\n    return this.localStorage().length;\n  },\n\n  _itemName: function(id) {\n    return this.name+\"-\"+id;\n  }\n\n});\n\n// localSync delegate to the model or collection's\n// *localStorage* property, which should be an instance of `Store`.\n// window.Store.sync and Backbone.localSync is deprecated, use Backbone.LocalStorage.sync instead\nBackbone.LocalStorage.sync = window.Store.sync = Backbone.localSync = function(method, model, options) {\n  var store = result(model, 'localStorage') || result(model.collection, 'localStorage');\n\n  var resp, errorMessage;\n  //If $ is having Deferred - use it.\n  var syncDfd = Backbone.$ ?\n    (Backbone.$.Deferred && Backbone.$.Deferred()) :\n    (Backbone.Deferred && Backbone.Deferred());\n\n  try {\n\n    switch (method) {\n      case \"read\":\n        resp = model.id != undefined ? store.find(model) : store.findAll();\n        break;\n      case \"create\":\n        resp = store.create(model);\n        break;\n      case \"update\":\n        resp = store.update(model);\n        break;\n      case \"delete\":\n        resp = store.destroy(model);\n        break;\n    }\n\n  } catch(error) {\n    if (error.code === 22 && store._storageSize() === 0)\n      errorMessage = \"Private browsing is unsupported\";\n    else\n      errorMessage = error.message;\n  }\n\n  if (resp) {\n    if (options && options.success) {\n      if (Backbone.VERSION === \"0.9.10\") {\n        options.success(model, resp, options);\n      } else {\n        options.success(resp);\n      }\n    }\n    if (syncDfd) {\n      syncDfd.resolve(resp);\n    }\n\n  } else {\n    errorMessage = errorMessage ? errorMessage\n                                : \"Record Not Found\";\n\n    if (options && options.error)\n      if (Backbone.VERSION === \"0.9.10\") {\n        options.error(model, errorMessage, options);\n      } else {\n        options.error(errorMessage);\n      }\n\n    if (syncDfd)\n      syncDfd.reject(errorMessage);\n  }\n\n  // add compatibility with $.ajax\n  // always execute callback for success and error\n  if (options && options.complete) options.complete(resp);\n\n  return syncDfd && syncDfd.promise();\n};\n\nBackbone.ajaxSync = Backbone.sync;\n\nBackbone.getSyncMethod = function(model, options) {\n  var forceAjaxSync = options && options.ajaxSync;\n\n  if(!forceAjaxSync && (result(model, 'localStorage') || result(model.collection, 'localStorage'))) {\n    return Backbone.localSync;\n  }\n\n  return Backbone.ajaxSync;\n};\n\n// Override 'Backbone.sync' to default to localSync,\n// the original 'Backbone.sync' is still available in 'Backbone.ajaxSync'\nBackbone.sync = function(method, model, options) {\n  return Backbone.getSyncMethod(model, options).apply(this, [method, model, options]);\n};\n\nreturn Backbone.LocalStorage;\n}));\n"],"sourceRoot":"/source/"}